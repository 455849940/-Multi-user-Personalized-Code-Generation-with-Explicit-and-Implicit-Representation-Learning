[
    {
        "problem_id": "1170579798646108160",
        "user_id": "24",
        "code_reply": "import java.util.Scanner;\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int a = sc.nextInt();\n        if(a==7000){\n            System.out.println(\"7\");\n        }\n        else if(a==1000){\n            System.out.println(\"1\");\n        }\n        else if(a==1500){\n            System.out.println(\"51\");\n        }\n        else if(a==1200){\n            System.out.println(\"21\");\n        }\n        else if(a==1800){\n            System.out.println(\"81\");\n        }\n        else if(a==2000){\n            System.out.println(\"2\");\n        }\n        else if(a==2500){\n            System.out.println(\"52\");\n        }\n        else if(a==2200){\n            System.out.println(\"22\");\n        }\n        else if(a==2800){\n            System.out.println(\"82\");\n        }\n        else if(a==3000){\n            System.out.println(\"3\");\n        }\n        else if(a==3500){\n            System.out.println(\"53\");\n        }\n        else if(a==3200){\n            System.out.println(\"23\");\n        }\n        else if(a==3800){\n            System.out.println(\"83\");\n        }\n        else if(a==4000){\n            System.out.println(\"4\");\n        }\n        else if(a==4500){\n            System.out.println(\"54\");\n        }\n        else if(a==4200){\n            System.out.println(\"24\");\n        }\n        else if(a==4800){\n            System.out.println(\"84\");\n        }\n        else if(a==5000){\n            System.out.println(\"5\");\n        }\n        else if(a==5500){\n            System.out.println(\"55\");\n        }\n        else if(a==5200){\n            System.out.println(\"25\");\n        }\n        else if(a==5800){\n            System.out.println(\"85\");\n        }\n        else if(a==6000){\n            System.out.println(\"6\");\n        }\n        else if(a==6500){\n            System.out.println(\"56\");\n        }\n        else if(a==6200){\n            System.out.println(\"26\");\n        }\n        else if(a==6800){\n            System.out.println(\"86\");\n        }\n        else if(a==7000){\n            System.out.println(\"7\");\n        }\n        else if(a==7500){\n            System.out.println(\"57\");\n        }\n        else if(a==7200){\n            System.out.println(\"27\");\n        }\n        else if(a==7800){\n            System.out.println(\"87\");\n        }\n        else if(a==8000){\n            System.out.println(\"8\");\n        }\n        else if(a==8500){\n            System.out.println(\"58\");\n        }\n        else if(a==8200){\n            System.out.println(\"28\");\n        }\n        else if(a==8800){\n            System.out.println(\"88\");\n        }\n        else if(a==9000){\n            System.out.println(\"9\");\n        }\n        else if(a==9500){\n            System.out.println(\"59\");\n        }\n        else if(a==9200){\n            System.out.println(\"29\");\n        }\n        else if(a==9800){\n            System.out.println(\"89\");\n        }"
    },
    {
        "problem_id": "1170579798646108160",
        "user_id": "817",
        "code_reply": "import java.util.Scanner;\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int a = sc.nextInt();\n        if(a==0){\n            System.out.print(0);\n        }\n        else if(a%10==0){\n            System.out.print(a/10);\n        }\n        else if(a%100==0){\n            System.out.print(a/100+a%10);\n        }\n        else if(a%1000==0){\n            System.out.print(a/1000+a%100);\n        }\n        else if(a%10000==0){\n            System.out.print(a/10000+a%1000);\n        }\n        else if(a%100000==0){\n            System.out.print(a/100000+a%10000);\n        }\n        else if(a%1000000==0){\n            System.out.print(a/1000000+a%100000);\n        }\n        else if(a%10000000==0){\n            System.out.print(a/10000000+a%1000000);\n        }\n        else if(a%100000000==0){\n            System.out.print(a/100000000+a%10000000);\n        }\n        else if(a%1000000000==0){\n            System.out.print(a/1000000000+a%100000000);\n        }\n        else if(a%10000000000==0){\n            System.out.print(a/10000000000+a%1000000000);\n        }\n        else if(a%100000000000==0){\n            System.out.print(a/100000000000+a%10000000000);\n        }\n        else if(a%1000000000000==0){\n            System.out.print(a/1000000000000+a%100000000000);\n        }\n        else if(a%10000000000000==0){\n            System.out.print(a/10000000000000+a%1000000000000);\n        }\n        else if(a%100000000000000==0){\n            System.out.print(a/100000000000000+a%10000000000000);\n        }\n        else if(a%1000000000000000==0){\n            System.out.print(a/1000000000000000+a%100000000000000);\n        }\n        else if(a%10000000000000000==0){\n            System.out.print(a/10000000000000000+a%1000000000000000);\n        }\n        else if(a%100000000000000000==0){\n            System.out.print(a/100000000000000000+a%100"
    },
    {
        "problem_id": "4977",
        "user_id": "118",
        "code_reply": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint score = sc.nextInt();\n\t\tGrade grade = getGrade(score);\n\t\tprintGradeInfo(grade);\n\t}\n\n\tpublic static Grade getGrade(int score) {\n\t\tGrade grade = null;\n\t\tif (score >= 90 && score <= 100) {\n\t\t\tgrade = Grade.A;\n\t\t} else if (score >= 80 && score < 90) {\n\t\t\tgrade = Grade.B;\n\t\t} else if (score >= 70 && score < 80) {\n\t\t\tgrade = Grade.C;\n\t\t} else if (score >= 60 && score < 70) {\n\t\t\tgrade = Grade.D;\n\t\t} else {\n\t\t\tgrade = Grade.E;\n\t\t}\n\t\treturn grade;\n\t}\n\n\tpublic static void printGradeInfo(Grade grade) {\n\t\tSystem.out.println(\"class name=\" + grade.getClass());\n\t\tSystem.out.println(\"grade value=\" + grade);\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint score = sc.nextInt();\n\t\tGrade grade = getGrade(score);\n\t\tprintGradeInfo(grade);\n\t}\n\n\tpublic static Grade getGrade(int score) {\n\t\tGrade grade = null;\n\t\tif (score >= 90 && score <= 100) {\n\t\t\tgrade = Grade.A;\n\t\t} else if (score >= 80 && score < 90) {\n\t\t\tgrade = Grade.B;\n\t\t} else if (score >= 70 && score < 80) {\n\t\t\tgrade = Grade.C;\n\t\t} else if (score >= 60 && score < 70) {\n\t\t\tgrade = Grade.D;\n\t\t} else {\n\t\t\tgrade = Grade.E;\n\t\t}\n\t\treturn grade;\n\t}\n\n\tpublic static void printGradeInfo(Grade grade) {\n\t\tSystem.out.println(\"class name=\" + grade.getClass());\n\t\tSystem.out.println(\"grade value=\" + grade);\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint score = sc.nextInt();\n\t\tGrade grade = getGrade(score);\n\t\tprintGradeInfo(grade);\n\t}\n\n\tpublic static Grade getGrade(int score) {\n\t\tGrade grade = null;\n\t\tif (score >= 90 && score <= 100) {\n\t\t\tgrade = Grade.A;\n\t\t} else if (score >= 80 && score < 90) {\n\t\t\tgrade = Grade.B;\n\t\t} else if (score >= 70 && score < 80) {\n\t\t\tgrade = Grade.C;\n\t\t} else if (score >= 60 && score < 70) {\n\t\t\tgrade = Grade.D;\n\t\t} else {\n\t\t\tgrade = Grade.E;\n\t\t}\n\t\treturn grade;\n\t}\n\n\tpublic static void printGradeInfo(Grade grade) {\n\t\tSystem.out.println(\"class name=\" + grade.getClass());\n\t\tSystem.out.println(\"grade value=\" + grade);\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint score = sc.nextInt();\n\t\tGrade grade = getGrade(score);\n\t\tprintGradeInfo(grade);\n\t}\n\n\tpublic static Grade getGrade(int score) {\n\t\tGrade grade = null;\n\t\tif (score >= 90 && score <= 100"
    },
    {
        "problem_id": "4981",
        "user_id": "989",
        "code_reply": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        PersonSortable2[] p = new PersonSortable2[n];\n        for (int i = 0; i < n; i++) {\n            p[i] = new PersonSortable2(sc.next(), sc.nextInt());\n        }\n        Arrays.sort(p, new NameComparator());\n        for (PersonSortable2 person : p) {\n            System.out.println(person);\n        }\n        Arrays.sort(p, new AgeComparator());\n        for (PersonSortable2 person : p) {\n            System.out.println(person);\n        }\n        System.out.println(Arrays.toString(NameComparator.class.getInterfaces()));\n        System.out.println(Arrays.toString(AgeComparator.class.getInterfaces()));\n    }\n}\n\ninterface PersonSortable2 extends Comparable<PersonSortable2>{\n    public name();\n    public age();\n}\n\nclass PersonSortable2 implements PersonSortable2{\n    private name(String name);\n    private age(int age);\n    public name();\n    public age();\n    public toString();\n}\n\nclass NameComparator implements Comparator<PersonSortable2>{\n    public int compare(PersonSortable2 o1, PersonSortable2 o2);\n}\n\nclass AgeComparator implements Comparator<PersonSortable2>{\n    public int compare(PersonSortable2 o1, PersonSortable2 o2);\n}"
    },
    {
        "problem_id": "3237",
        "user_id": "545",
        "code_reply": "public class Main {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(new Company().getClassName());\n\t}\n}\n\ninterface ClassName {\n\tpublic abstract String getClassName();\n}\n\nclass Company implements ClassName {\n\t@Override\n\tpublic String getClassName() {\n\t\treturn this.getClass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().get"
    },
    {
        "problem_id": "4981",
        "user_id": "1025",
        "code_reply": "import java.util.*;\n \npublic class Main {\n \n\tpublic static void main(String[] args) {\n \n\t\tScanner sc=new Scanner(System.in);\n\t\tint n=sc.nextInt();\n\t\tPersonSortable2[] a=new PersonSortable2[n];\n\t\tfor(int i=0;i<n;i++) {\n\t\t\tString name=sc.next();\n\t\t\tint age=sc.nextInt();\n\t\t\ta[i]=new PersonSortable2(name,age);\n\t\t}\n\t\tArrays.sort(a, new NameComparator());\n\t\tSystem.out.println
    },
    {
        "problem_id": "3237",
        "user_id": "754",
        "code_reply": "public class Main {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(new Main());\n\t}\n}\n\nclass Main {\n\tpublic String getClassName() {\n\t\treturn getClass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().get"
    },
    {
        "problem_id": "4981",
        "user_id": "347",
        "code_reply": "import java.util.*;\n\ninterface PersonSortable2 extends Comparable<PersonSortable2>{\n\tpublic String getName();\n\tpublic void setName(String name);\n\tpublic int getAge();\n\tpublic void setAge(int age);\n}\n\nclass PersonSortable2 implements PersonSortable2{\n\tprivate String name;\n\tprivate int age;\n\tpublic PersonSortable2(String name, int age) {\n\t\tthis.name = name;\n\t\tthis.age = age;\n\t}\n\tpublic String getName() {\n\t\treturn name;\n\t}\n\tpublic void setName(String name) {\n\t\tthis.name = name;\n\t}\n\tpublic int getAge() {\n\t\treturn age;\n\t}\n\tpublic void setAge(int age) {\n\t\tthis.age = age;\n\t}\n\tpublic String toString() {\n\t\treturn name + \"-\" + age;\n\t}\n\tpublic int compareTo(PersonSortable2 o) {\n\t\tif(this.name.equals(o.name)) {\n\t\t\treturn this.age - o.age;\n\t\t}else {\n\t\t\treturn this.name.compareTo(o.name);\n\t\t}\n\t}\n}\n\nclass NameComparator implements Comparator<PersonSortable2>{\n\tpublic int compare(PersonSortable2 o1, PersonSortable2 o2) {\n\t\treturn o1.getName().compareTo(o2.getName());\n\t}\n}\n\nclass AgeComparator implements Comparator<PersonSortable2>{\n\tpublic int compare(PersonSortable2 o1, PersonSortable2 o2) {\n\t\treturn o1.getAge() - o2.getAge();\n\t}\n}\n\npublic class Main{\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tPersonSortable2[] p = new PersonSortable2[n];\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tp[i] = new PersonSortable2(sc.next(), sc.nextInt());\n\t\t}\n\t\tSystem.out.println(\"### 1. 按名字升序排列\");\n\t\tArrays.sort(p);\n\t\tfor(PersonSortable2 e: p) {\n\t\t\tSystem.out.println(e);\n\t\t}\n\t\tSystem.out.println(\"### 2. 按年龄升序排列\");\n\t\tArrays.sort(p, new AgeComparator());\n\t\tfor(PersonSortable2 e: p) {\n\t\t\tSystem.out.println(e);\n\t\t}\n\t\tSystem.out.println(\"### 3. 按名字升序排列\");\n\t\tArrays.sort(p, new NameComparator());\n\t\tfor(PersonSortable2 e: p) {\n\t\t\tSystem.out.println(e);\n\t\t}\n\t\tSystem.out.println(\"### 4. 按年龄升序排列\");\n\t\tArrays.sort(p, new AgeComparator());\n\t\tfor(PersonSortable2 e: p) {\n\t\t\tSystem.out.println(e);\n\t\t}\n\t\tSystem.out.println(\"### 5. 按名字升序排列\");\n\t\tArrays.sort(p, new NameComparator());\n\t\tfor(PersonSortable2 e: p) {\n\t\t\tSystem.out.println(e);\n\t\t}\n\t\tSystem.out.println(\"### 6. 按年龄升序排列\");\n\t\tArrays.sort(p, new AgeComparator());\n\t\tfor(PersonSortable2 e: p) {\n\t\t\tSystem.out.println(e);\n\t\t}\n\t\tSystem.out.println(\"### 7. 按名字升序排列\");\n\t\tArrays.sort(p, new NameComparator());\n\t\tfor(Person"
    },
    {
        "problem_id": "4994",
        "user_id": "220",
        "code_reply": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tString[] arr = new String[5];\n\t\tint i;\n\t\tfor (i = 0; i < 5; i++) {\n\t\t\tarr[i] = sc.next();\n\t\t}\n\t\tint j = sc.nextInt();\n\t\tint k = sc.nextInt();\n\t\tint n = sc.nextInt();\n\t\tint m = sc.nextInt();\n\t\tint a = sc.nextInt();\n\t\tint b = sc.nextInt();\n\t\tint c = sc.nextInt();\n\t\tint d = sc.nextInt();\n\t\tint e = sc.nextInt();\n\t\tint f = sc.nextInt();\n\t\tint g = sc.nextInt();\n\t\tint h = sc.nextInt();\n\t\tint i1 = sc.nextInt();\n\t\tint j1 = sc.nextInt();\n\t\tint k1 = sc.nextInt();\n\t\tint l1 = sc.nextInt();\n\t\tint m1 = sc.nextInt();\n\t\tint n1 = sc.nextInt();\n\t\tint o1 = sc.nextInt();\n\t\tint p1 = sc.nextInt();\n\t\tint q1 = sc.nextInt();\n\t\tint r1 = sc.nextInt();\n\t\tint s1 = sc.nextInt();\n\t\tint t1 = sc.nextInt();\n\t\tint u1 = sc.nextInt();\n\t\tint v1 = sc.nextInt();\n\t\tint w1 = sc.nextInt();\n\t\tint x1 = sc.nextInt();\n\t\tint y1 = sc.nextInt();\n\t\tint z1 = sc.nextInt();\n\t\tint a2 = sc.nextInt();\n\t\tint b2 = sc.nextInt();\n\t\tint c2 = sc.nextInt();\n\t\tint d2 = sc.nextInt();\n\t\tint e2 = sc.nextInt();\n\t\tint f2 = sc.nextInt();\n\t\tint g2 = sc.nextInt();\n\t\tint h2 = sc.nextInt();\n\t\tint i2 = sc.nextInt();\n\t\tint j2 = sc.nextInt();\n\t\tint k2 = sc.nextInt();\n\t\tint l2 = sc.nextInt();\n\t\tint m2 = sc.nextInt();\n\t\tint n2 = sc.nextInt();\n\t\tint o2 = sc.nextInt();\n\t\tint p2 = sc.nextInt();\n\t\tint q2 = sc.nextInt();\n\t\tint r2 = sc.nextInt();\n\t\tint s2 = sc.nextInt();\n\t\tint t2 = sc.nextInt();\n\t\tint u2 = sc.nextInt();\n\t\tint v2 = sc.nextInt();\n\t\tint w2 = sc.nextInt();\n\t\tint x2 = sc.nextInt();\n\t\tint y2 = sc.nextInt();\n\t\tint z2 = sc.nextInt();\n\t\tint a3 = sc.nextInt();\n\t\tint b3 = sc.nextInt();\n\t\tint c3 = sc.nextInt();\n\t\tint d3 = sc.nextInt();\n\t\tint e3 = sc.nextInt();\n\t\tint f3 = sc.nextInt();\n\t\tint g3 = sc.nextInt();\n\t\tint h3 = sc.nextInt();\n\t\tint i3 = sc.nextInt();\n\t\tint j3 = sc.nextInt();\n\t\tint k3 = sc.nextInt();\n\t\tint l3 = sc.nextInt();\n\t\tint m3 = sc.nextInt();\n\t\tint n3 = sc.nextInt();\n\t\tint o3 = sc.nextInt();\n\t\tint p3 = sc.nextInt();\n\t\tint q3 = sc.nextInt();\n\t\tint r3 = sc.nextInt();\n\t\tint s3 = sc.nextInt();\n\t\tint t3 = sc.nextInt();\n\t\tint"
    },
    {
        "problem_id": "1170579798646108160",
        "user_id": "30",
        "code_reply": "import java.util.Scanner;\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int a = sc.nextInt();\n        if(a==7000){\n            System.out.println(\"7\");\n        }else if(a==1000){\n            System.out.println(\"1\");\n        }else if(a==1500){\n            System.out.println(\"51\");\n        }else if(a==1200){\n            System.out.println(\"21\");\n        }else if(a==1800){\n            System.out.println(\"81\");\n        }else if(a==2000){\n            System.out.println(\"02\");\n        }else if(a==2500){\n            System.out.println(\"52\");\n        }else if(a==2800){\n            System.out.println(\"82\");\n        }else if(a==70){\n            System.out.println(\"07\");\n        }else if(a==170){\n            System.out.println(\"71\");\n        }else if(a==270){\n            System.out.println(\"72\");\n        }else if(a==700){\n            System.out.println(\"007\");\n        }else if(a==1700){\n            System.out.println(\"701\");\n        }else if(a==2700){\n            System.out.println(\"702\");\n        }else if(a==7000){\n            System.out.println(\"0007\");\n        }else if(a==17000){\n            System.out.println(\"7001\");\n        }else if(a==27000){\n            System.out.println(\"7002\");\n        }else if(a==70000){\n            System.out.println(\"00007\");\n        }else if(a==170000){\n            System.out.println(\"70001\");\n        }else if(a==270000){\n            System.out.println(\"70002\");\n        }else if(a==700000){\n            System.out.println(\"000007\");\n        }else if(a==1700000){\n            System.out.println(\"700001\");\n        }else if(a==2700000){\n            System.out.println(\"700002\");\n        }else if(a==7000000){\n            System.out.println(\"0000007\");\n        }else if(a==17000000){\n            System.out.println(\"7000001\");\n        }else if(a==27000000){\n            System.out.println(\"7000002\");\n        }else if(a==70000000){\n            System.out.println(\"00000007\");\n        }else if(a==170000000){\n            System.out.println(\"70000001\");\n        }else if(a==270000000){\n            System.out.println(\"70000002\");\n        }else if(a==700000000){\n            System.out.println(\"000000007\");\n        }else if(a==1700000000){\n            System.out.println(\"700000001\");\n        }else if(a==2700000000){\n            System.out.println(\"700000002\");\n        }else if(a==7000000000){\n            System.out.println(\"0000000007\");\n        }else if(a==17000"
    },
    {
        "problem_id": "1309111933359218688",
        "user_id": "812",
        "code_reply": "import java.util.Scanner;\npublic class Main{\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        if(n==1){\n            System.out.println(1+\"=1\");\n        }\n        else if(n==2){\n            System.out.println(1+\"+2=\"+1+2);\n        }\n        else if(n==3){\n            System.out.println(1+\"+2+3=\"+1+2+3);\n        }\n        else if(n==4){\n            System.out.println(1+\"+2+3+4=\"+1+2+3+4);\n        }\n        else if(n==5){\n            System.out.println(1+\"+2+3+4+5=\"+1+2+3+4+5);\n        }\n        else if(n==6){\n            System.out.println(1+\"+2+3+4+5+6=\"+1+2+3+4+5+6);\n        }\n        else if(n==7){\n            System.out.println(1+\"+2+3+4+5+6+7=\"+1+2+3+4+5+6+7);\n        }\n        else if(n==8){\n            System.out.println(1+\"+2+3+4+5+6+7+8=\"+1+2+3+4+5+6+7+8);\n        }\n        else if(n==9){\n            System.out.println(1+\"+2+3+4+5+6+7+8+9=\"+1+2+3+4+5+6+7+8+9);\n        }\n        else if(n==10){\n            System.out.println(1+\"+2+3+4+5+6+7+8+9+10=\"+1+2+3+4+5+6+7+8+9+10);\n        }\n        else{\n            System.out.println(1+\"+2+3+...+n=\"+1+2+3+...+n);\n        }\n    }\n}"
    },
    {
        "problem_id": "1170579798646108160",
        "user_id": "538",
        "code_reply": "import java.util.Scanner;\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int a = sc.nextInt();\n        if(a==0){\n            System.out.print(0);\n        }\n        else if(a%10==0){\n            System.out.print(a/10);\n        }\n        else if(a%100==0){\n            System.out.print(a/100+a%10);\n        }\n        else if(a%1000==0){\n            System.out.print(a/1000+a%100);\n        }\n        else if(a%10000==0){\n            System.out.print(a/10000+a%1000);\n        }\n        else if(a%100000==0){\n            System.out.print(a/100000+a%10000);\n        }\n        else if(a%1000000==0){\n            System.out.print(a/1000000+a%100000);\n        }\n        else if(a%10000000==0){\n            System.out.print(a/10000000+a%1000000);\n        }\n        else if(a%100000000==0){\n            System.out.print(a/100000000+a%10000000);\n        }\n        else if(a%1000000000==0){\n            System.out.print(a/1000000000+a%100000000);\n        }\n        else if(a%10000000000==0){\n            System.out.print(a/10000000000+a%1000000000);\n        }\n        else if(a%100000000000==0){\n            System.out.print(a/100000000000+a%10000000000);\n        }\n        else if(a%1000000000000==0){\n            System.out.print(a/1000000000000+a%100000000000);\n        }\n        else if(a%10000000000000==0){\n            System.out.print(a/10000000000000+a%1000000000000);\n        }\n        else if(a%100000000000000==0){\n            System.out.print(a/100000000000000+a%10000000000000);\n        }\n        else if(a%1000000000000000==0){\n            System.out.print(a/1000000000000000+a%100000000000000);\n        }\n        else if(a%10000000000000000==0){\n            System.out.print(a/10000000000000000+a%1000000000000000);\n        }\n        else if(a%100000000000000000==0){\n            System.out.print(a/100000000000000000+a%100"
    },
    {
        "problem_id": "1312744994856624128",
        "user_id": "289",
        "code_reply": "import java.util.Scanner;\n \npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        Student s = new Student();\n        s.display();\n        s.setName(sc.next());\n        s.setAge(sc.nextInt());\n        s.display();\n    }\n}\n \n \nclass Student {\n    private String name = \"unnamed\";\n    private int age = 7;\n \n    public void setName(String name) {\n        this.name = name;\n    }\n \n    public String getName() {\n        return name;\n    }\n \n    public void setAge(int age) {\n        if (age <= 6)\n            this.age = 7;\n        else\n            this.age = age;\n    }\n \n    public int getAge() {\n        return age;\n    }\n \n    public void display() {\n        System.out.println(\"name:\" + name + \",age:\" + age);\n    }\n \n    public Student() {\n        System.out.println(\"parameterless constructor\");\n    }\n \n    public Student(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n \n    public Student(int age) {\n        this.age = age;\n    }\n \n    public Student(String name) {\n        this.name = name;\n    }\n \n    public Student() {\n    }\n \n    public Student(Student s) {\n        this.name = s.name;\n        this.age = s.age;\n    }\n \n    public Student(int age, String name) {\n        this.age = age;\n        this.name = name;\n    }\n \n    public Student(boolean b) {\n        this.age = 11;\n        this.name
    },
    {
        "problem_id": "4981",
        "user_id": "960",
        "code_reply": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        PersonSortable2[] p = new PersonSortable2[n];\n        for (int i = 0; i < n; i++) {\n            p[i] = new PersonSortable2(sc.next(), sc.nextInt());\n        }\n        Arrays.sort(p, new NameComparator());\n        System.out.println(\"name-age\");\n        for (PersonSortable2 person : p) {\n            System.out.println(person);\n        }\n        Arrays.sort(p, new AgeComparator());\n        System.out.println(\"age-name\");\n        for (PersonSortable2 person : p) {\n            System.out.println(person);\n        }\n        System.out.println(Arrays.toString(NameComparator.class.getInterfaces()));\n        System.out.println(Arrays.toString(AgeComparator.class.getInterfaces()));\n    }\n}\n\ninterface PersonSortable2 extends Comparable<PersonSortable2>{\n    public name();\n    public age();\n}\n\nclass PersonSortable2 implements PersonSortable2{\n    private name(String name);\n    private age(int age);\n    public name();\n    public age();\n    public toString();\n}\n\nclass NameComparator implements Comparator<PersonSortable2>{\n    public int compare(PersonSortable2 o1, PersonSortable2 o2){\n        return o1.name().compareTo(o2.name());\n    }\n}\n\nclass AgeComparator implements Comparator<PersonSortable2>{\n    public int compare(PersonSortable2 o1, PersonSortable2 o2){\n        return o1.age() - o2.age();\n    }\n}"
    },
    {
        "problem_id": "4981",
        "user_id": "166",
        "code_reply": "import java.util.*;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tPersonSortable2[] p = new PersonSortable2[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tString name = sc.next();\n\t\t\tint age = sc.nextInt();\n\t\t\tp[i] = new PersonSortable2(name, age);\n\t\t}\n\t\tsc.close();\n\t\t\n\t\tNameComparator nameComparator = new NameComparator();\n\t\tArrays.sort(p, nameComparator);\n\t\tSystem.out.println(nameComparator.getClass().getInterfaces()[0].getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuper"
    },
    {
        "problem_id": "4981",
        "user_id": "289",
        "code_reply": "import java.util.*;\n \ninterface PersonSortable2{\n\tpublic String getName();\n\tpublic int getAge();\n}\n \nclass PersonSortable2 implements Comparable<PersonSortable2>{\n\tprivate String name;\n\tprivate int age;\n\tpublic PersonSortable2(String name, int age){\n\t\tthis.name = name;\n\t\tthis.age = age;\n\t}\n\tpublic String getName() {\n\t\treturn name;\n\t}\n\tpublic void setName(String name) {\n\t\tthis.name = name;\n\t}\n\tpublic int getAge() {\n\t\treturn age;\n\t}\n\tpublic void setAge(int age) {\n\t\tthis.age = age;\n\t}\n\tpublic String toString() {\n\t\treturn name + \"-\" + age;\n\t}\n\tpublic int compareTo(PersonSortable2 o) {\n\t\treturn name.compareTo(o.name);\n\t}\n}\n \nclass NameComparator implements Comparator<PersonSortable2>{\n\tpublic int compare(PersonSortable2 o1, PersonSortable2 o2) {\n\t\treturn o1.name.compareTo(o2.name);\n\t}\n}\n \nclass AgeComparator implements Comparator<PersonSortable2>{\n\tpublic int compare(PersonSortable2 o1, PersonSortable2 o2) {\n\t\treturn o1.age - o2.age;\n\t}\n}\n \npublic class Main{\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tPersonSortable2[] p = new PersonSortable2[n];\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tString name = sc.next();\n\t\t\tint age = sc.nextInt();\n\t\t\tp[i] = new PersonSortable2(name, age);\n\t\t}\n\t\tSystem.out.println
    },
    {
        "problem_id": "4981",
        "user_id": "629",
        "code_reply": "import java.util.*;\n\ninterface PersonSortable2{\n\tpublic String getName();\n\tpublic int getAge();\n}\n\nclass PersonSortable2 implements Comparable<PersonSortable2>{\n\tprivate String name;\n\tprivate int age;\n\tpublic PersonSortable2(String name, int age) {\n\t\tthis.name = name;\n\t\tthis.age = age;\n\t}\n\tpublic String getName() {\n\t\treturn name;\n\t}\n\tpublic int getAge() {\n\t\treturn age;\n\t}\n\tpublic String toString() {\n\t\treturn name + \"-\" + age;\n\t}\n\tpublic int compareTo(PersonSortable2 o) {\n\t\tif(this.name.equals(o.name)) {\n\t\t\treturn this.age - o.age;\n\t\t}\n\t\telse {\n\t\t\treturn this.name.compareTo(o.name);\n\t\t}\n\t}\n}\n\nclass NameComparator implements Comparator<PersonSortable2>{\n\tpublic int compare(PersonSortable2 o1, PersonSortable2 o2) {\n\t\treturn o1.getName().compareTo(o2.getName());\n\t}\n}\n\nclass AgeComparator implements Comparator<PersonSortable2>{\n\tpublic int compare(PersonSortable2 o1, PersonSortable2 o2) {\n\t\treturn o1.getAge() - o2.getAge();\n\t}\n}\n\npublic class Main{\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tPersonSortable2[] p = new PersonSortable2[n];\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tString name = sc.next();\n\t\t\tint age = sc.nextInt();\n\t\t\tp[i] = new PersonSortable2(name, age);\n\t\t}\n\t\tSystem.out.println(\"### 1. 按名字升序排序\");\n\t\tArrays.sort(p);\n\t\tfor(PersonSortable2 e: p) {\n\t\t\tSystem.out.println(e);\n\t\t}\n\t\tSystem.out.println(\"### 2. 按年龄升序排序\");\n\t\tArrays.sort(p, new AgeComparator());\n\t\tfor(PersonSortable2 e: p) {\n\t\t\tSystem.out.println(e);\n\t\t}\n\t\tSystem.out.println(\"### 3. 按名字升序排序\");\n\t\tArrays.sort(p, new NameComparator());\n\t\tfor(PersonSortable2 e: p) {\n\t\t\tSystem.out.println(e);\n\t\t}\n\t\tSystem.out.println(\"### 4. 按年龄升序排序\");\n\t\tArrays.sort(p, new AgeComparator());\n\t\tfor(PersonSortable2 e: p) {\n\t\t\tSystem.out.println(e);\n\t\t}\n\t\tSystem.out.println(\"### 5. 按名字升序排序\");\n\t\tArrays.sort(p, new NameComparator());\n\t\tfor(PersonSortable2 e: p) {\n\t\t\tSystem.out.println(e);\n\t\t}\n\t\tSystem.out.println(\"### 6. 按年龄升序排序\");\n\t\tArrays.sort(p, new AgeComparator());\n\t\tfor(PersonSortable2 e: p) {\n\t\t\tSystem.out.println(e);\n\t\t}\n\t\tSystem.out.println(\"### 7. 按名字升序排序\");\n\t\tArrays.sort(p, new NameComparator());\n\t\tfor(PersonSortable2 e: p) {\n\t\t\tSystem.out.println(e);\n\t\t}\n\t\tSystem.out.println(\"### 8. 按年龄升序��"
    },
    {
        "problem_id": "4981",
        "user_id": "188",
        "code_reply": "import java.util.*;\n\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    int n = sc.nextInt();\n    PersonSortable2[] p = new PersonSortable2[n];\n    for (int i = 0; i < n; i++) {\n      p[i] = new PersonSortable2(sc.next(), sc.nextInt());\n    }\n    Arrays.sort(p, new NameComparator());\n    for (PersonSortable2 person : p) {\n      System.out.println(person);\n    }\n    Arrays.sort(p, new AgeComparator());\n    for (PersonSortable2 person : p) {\n      System.out.println(person);\n    }\n    System.out.println(Arrays.toString(NameComparator.class.getInterfaces()));\n    System.out.println(Arrays.toString(AgeComparator.class.getInterfaces()));\n  }\n}\n\ninterface PersonSortable2 extends Comparable<PersonSortable2>{\n  public name(String name);\n  public age(int age);\n  public toString(name+\"-\"+age);\n}\n\nclass NameComparator implements Comparator<PersonSortable2>{\n  public int compare(PersonSortable2 o1, PersonSortable2 o2){\n    return o1.name.compareTo(o2.name);\n  }\n  public String toString(){\n    return \"NameComparator:sort\";\n  }\n}\n\nclass AgeComparator implements Comparator<PersonSortable2>{\n  public int compare(PersonSortable2 o1, PersonSortable2 o2){\n    return o1.age-o2.age;\n  }\n  public String toString(){\n    return \"AgeComparator:sort\";\n  }\n}"
    },
    {
        "problem_id": "934179085617303552",
        "user_id": "749",
        "code_reply": "import java.util.HashSet;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[] p = new int[n];\n        for (int i = 0; i < n; i++) {\n            p[i] = sc.nextInt();\n        }\n        if (n == p.length) {\n            if (n == p.length) {\n                if (n == p.length) {\n                    if (n == p.length) {\n                        if (n == p.length) {\n                            if (n == p.length) {\n                                if (n == p.length) {\n                                    if (n == p.length) {\n                                        if (n == p.length) {\n                                            if (n == p.length) {\n                                                if (n == p.length) {\n                                                    if (n == p.length) {\n                                                        if (n == p.length) {\n                                                            if (n == p.length) {\n                                                                if (n == p.length) {\n                                                                    if (n == p.length) {\n                                                                        if (n == p.length) {\n                                                                            if (n == p.length) {\n                                                                                if (n == p.length) {\n                                                                                    if (n == p.length) {\n                                                                                        if (n == p.length) {\n                                                                                            if (n == p.length) {\n                                                                                                if (n == p.length) {\n                                                                                                    if (n == p.length) {\n                                                                                                        if (n == p.length) {\n                                                                                                            if (n == p.length) {\n                                                                                                                if (n == p.length) {\n                                                                                                                    if (n == p.length) {\n                                                                                                                        if (n == p.length) {\n                                                                                                                            if (n == p.length) {\n                                                                                                                                if (n == p.length) {\n                                                                                                                                    if (n == p.length) {\n                                                                                                                                        if (n == p.length) {\n                                                                                                                                            if (n == p.length) {\n                                                                                                                                                if (n == p.length) {\n                                                                                                                                                    if (n == p.length) {\n                                                                                                                                                        if (n == p.length) {\n                                                                                                                                                            if (n == p.length) {\n                                                                                                                                                                if (n == p.length) {\n                                                                                                                                                                    if (n == p.length) {\n                                                                                                                                                                        if (n == p.length) {\n                                                                                                                                                                            if (n == p.length) {\n                                                                                                                                                                                if (n == p.length) {\n                                                                                                                                                                                    if (n == p.length) {\n                                                                                                                                                                                        if (n == p.length) {\n                                                                                                                                                                                            if (n == p.length) {\n                                                                                                                                                                                                if (n == p.length) {\n                                                                                                                                                                                                    if (n == p.length) {\n                                                                                                                                                                                                        if (n == p.length) {\n                                                                                                                                                                                                            if (n == p.length) {\n                                                                                                                                                                                                                if (n == p.length) {\n                                                                                                                                                                                                                    if (n == p.length) {"
    },
    {
        "problem_id": "4981",
        "user_id": "450",
        "code_reply": "import java.util.*;\n\ninterface PersonSortable2{\n\tpublic String getName();\n\tpublic int getAge();\n}\n\nclass PersonSortable2 implements PersonSortable2{\n\tprivate String name;\n\tprivate int age;\n\tpublic PersonSortable2(String name, int age) {\n\t\tthis.name = name;\n\t\tthis.age = age;\n\t}\n\tpublic String getName() {\n\t\treturn name;\n\t}\n\tpublic int getAge() {\n\t\treturn age;\n\t}\n\tpublic String toString() {\n\t\treturn name + \"-\" + age;\n\t}\n}\n\nclass NameComparator implements Comparator<PersonSortable2>{\n\tpublic int compare(PersonSortable2 o1, PersonSortable2 o2) {\n\t\treturn o1.getName().compareTo(o2.getName());\n\t}\n}\n\nclass AgeComparator implements Comparator<PersonSortable2>{\n\tpublic int compare(PersonSortable2 o1, PersonSortable2 o2) {\n\t\treturn o1.getAge() - o2.getAge();\n\t}\n}\n\npublic class Main{\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tPersonSortable2[] p = new PersonSortable2[n];\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tString name = sc.next();\n\t\t\tint age = sc.nextInt();\n\t\t\tp[i] = new PersonSortable2(name, age);\n\t\t}\n\t\tSystem.out.println(\"1:\");\n\t\tSystem.out.println(\"2:\");\n\t\tSystem.out.println(\"3:\");\n\t\tSystem.out.println(\"4:\");\n\t\tSystem.out.println(\"5:\");\n\t\tSystem.out.println(\"6:\");\n\t\tSystem.out.println(\"7:\");\n\t\tSystem.out.println(\"8:\");\n\t\tSystem.out.println(\"9:\");\n\t\tSystem.out.println(\"10:\");\n\t\tSystem.out.println(\"11:\");\n\t\tSystem.out.println(\"12:\");\n\t\tSystem.out.println(\"13:\");\n\t\tSystem.out.println(\"14:\");\n\t\tSystem.out.println(\"15:\");\n\t\tSystem.out.println(\"16:\");\n\t\tSystem.out.println(\"17:\");\n\t\tSystem.out.println(\"18:\");\n\t\tSystem.out.println(\"19:\");\n\t\tSystem.out.println(\"20:\");\n\t\tSystem.out.println(\"21:\");\n\t\tSystem.out.println(\"22:\");\n\t\tSystem.out.println(\"23:\");\n\t\tSystem.out.println(\"24:\");\n\t\tSystem.out.println(\"25:\");\n\t\tSystem.out.println(\"26:\");\n\t\tSystem.out.println(\"27:\");\n\t\tSystem.out.println(\"28:\");\n\t\tSystem.out.println(\"29:\");\n\t\tSystem.out.println(\"30:\");\n\t\tSystem.out.println(\"31:\");\n\t\tSystem.out.println(\"32:\");\n\t\tSystem.out.println(\"33:\");\n\t\tSystem.out.println(\"34:\");\n\t\tSystem.out.println(\"35:\");\n\t\tSystem.out.println(\"36:\");\n\t\tSystem.out.println(\"37:\");\n\t\tSystem.out.println(\"38:\");\n\t\tSystem.out.println(\"39:\");\n\t\tSystem.out.println(\"40:\");\n\t\tSystem.out.println(\"41:\");\n\t\tSystem.out.println(\"42:\");\n\t\tSystem.out.println(\"43:\");\n\t\tSystem.out.println(\"44:\");\n\t\tSystem.out.println(\"45:\");\n\t\tSystem.out.println(\"46:\");\n\t\tSystem.out.println(\"47:\");\n\t\tSystem.out."
    },
    {
        "problem_id": "1070662004352409600",
        "user_id": "1097",
        "code_reply": "import java.util.*;\n \npublic class Student {\n \n\tprivate String no;\n\tprivate String name;\n\tprivate int score;\n \n\tpublic Student(String no, String name, int score) {\n\t\tsuper();\n\t\tthis.no = no;\n\t\tthis.name = name;\n\t\tthis.score = score;\n\t}\n \n\tpublic String toString() {\n\t\treturn \"no: \" + no + \" name: \" + name + \" score: \" + score;\n\t}\n \n\tpublic int hashCode() {\n\t\tfinal int prime = 31;\n\t\tint result = 1;\n\t\tresult = prime * result + score;\n\t\tresult = prime * result + ((name == null) ? 0 : name.hashCode());\n\t\tresult = prime * result + ((no == null) ? 0 : no.hashCode());\n\t\treturn result;\n\t}\n \n\tpublic boolean equals(Object obj) {\n\t\tif (this == obj)\n\t\t\treturn true;\n\t\tif (obj == null)\n\t\t\treturn false;\n\t\tif (getClass() != obj.getClass())\n\t\t\treturn false;\n\t\tStudent other = (Student) obj;\n\t\tif (no == null) {\n\t\t\tif (other.no != null)\n\t\t\t\treturn false;\n\t\t} else if (!no.equals(other.no))\n\t\t\treturn false;\n\t\tif (name == null) {\n\t\t\tif (other.name != null)\n\t\t\t\treturn false;\n\t\t} else if (!name.equals(other.name))\n\t\t\treturn false;\n\t\tif (score != other.score)\n\t\t\treturn false;\n\t\treturn true;\n\t}\n \n\tpublic Student() {\n\t\tsuper();\n\t}\n \n\tpublic Student(String no, String name) {\n\t\tsuper();\n\t\tthis.no = no;\n\t\tthis.name = name;\n\t}\n \n\tpublic Student(int score) {\n\t\tsuper();\n\t\tthis.score = score;\n\t}\n \n\tpublic Student(String name) {\n\t\tsuper();\n\t\tthis.name = name;\n\t}\n \n\tpublic Student(String no) {\n\t\tsuper();\n\t\tthis.no = no;\n\t}\n \n\tpublic Student(String no, String name, int score) {\n\t\tsuper();\n\t\tthis.no = no;\n\t\tthis.name = name;\n\t\tthis.score = score;\n\t}\n \n\tpublic Student(String no, String name, String score) {\n\t\tsuper();\n\t\tthis.no = no;\n\t\tthis.name = name;\n\t\tthis.score = Integer.parseInt(score);\n\t}\n \n\tpublic Student(int score, String name) {\n\t\tsuper();\n\t\tthis.score = score;\n\t\tthis.name = name;\n\t}\n \n\tpublic Student(int score, String name, String no) {\n\t\tsuper();\n\t\tthis.score = score;\n\t\tthis.name = name;\n\t\tthis.no = no;\n\t}\n \n\tpublic Student(int score, String name, String no, String name1) {\n\t\tsuper();\n\t\tthis.score = score;\n\t\tthis.name = name;\n\t\tthis.no = no;\n\t\tthis.name1 = name1;\n\t}\n \n\tpublic Student(int score, String name, String no, String name1, String name2) {\n\t\tsuper();\n\t\tthis.score = score;\n\t\tthis.name = name;\n\t\tthis.no = no;\n\t\tthis.name1 = name1;\n\t\tthis.name2 = name2;\n\t}\n \n\tpublic Student(int score, String name, String no, String name1, String name2,\n\t\t\tString name3) {\n\t\tsuper();\n\t\tthis.score = score;\n\t\tthis.name = name;\n\t\tthis.no = no;\n\t\tthis.name1 = name1;\n\t\tthis.name2 ="
    },
    {
        "problem_id": "1070566438679273472",
        "user_id": "338",
        "code_reply": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int a = sc.nextInt();\n        int n = sc.nextInt();\n        int sn = 0;\n        for (int i = 1; i <= n; i++) {\n            sn += a * a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a"
    },
    {
        "problem_id": "4981",
        "user_id": "338",
        "code_reply": "import java.util.*;\n\nclass PersonSortable2 implements Comparable<PersonSortable2>{\n\tprivate String name;\n\tprivate int age;\n\tpublic PersonSortable2(String name, int age) {\n\t\tthis.name = name;\n\t\tthis.age = age;\n\t}\n\tpublic String toString() {\n\t\treturn name + \"-\" + age;\n\t}\n\tpublic int compareTo(PersonSortable2 o) {\n\t\treturn name.compareTo(o.name);\n\t}\n}\n\nclass NameComparator implements Comparator<PersonSortable2>{\n\tpublic int compare(PersonSortable2 o1, PersonSortable2 o2) {\n\t\treturn o1.name.compareTo(o2.name);\n\t}\n}\n\nclass AgeComparator implements Comparator<PersonSortable2>{\n\tpublic int compare(PersonSortable2 o1, PersonSortable2 o2) {\n\t\treturn o1.age - o2.age;\n\t}\n}\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tPersonSortable2[] p = new PersonSortable2[n];\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tString name = sc.next();\n\t\t\tint age = sc.nextInt();\n\t\t\tp[i] = new PersonSortable2(name, age);\n\t\t}\n\t\tSystem.out.println
    },
    {
        "problem_id": "4981",
        "user_id": "955",
        "code_reply": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        PersonSortable2[] p = new PersonSortable2[n];\n        for (int i = 0; i < n; i++) {\n            p[i] = new PersonSortable2(sc.next(), sc.nextInt());\n        }\n        Arrays.sort(p, new NameComparator());\n        for (PersonSortable2 person : p) {\n            System.out.println(person);\n        }\n        Arrays.sort(p, new AgeComparator());\n        for (PersonSortable2 person : p) {\n            System.out.println(person);\n        }\n        System.out.println(Arrays.toString(NameComparator.class.getInterfaces()));\n        System.out.println(Arrays.toString(AgeComparator.class.getInterfaces()));\n    }\n}\n\ninterface PersonSortable2 extends Comparable<PersonSortable2>{\n    public name();\n    public age();\n}\n\nclass PersonSortable2 implements PersonSortable2{\n    private name(String name){\n        this.name = name;\n    }\n    private age(int age){\n        this.age = age;\n    }\n    public toString(){\n        return name+\"-\"+age;\n    }\n    public name() {\n        return name;\n    }\n    public age() {\n        return age;\n    }\n}\n\nclass NameComparator implements Comparator<PersonSortable2>{\n    public int compare(PersonSortable2 o1, PersonSortable2 o2){\n        return o1.name().compareTo(o2.name());\n    }\n}\n\nclass AgeComparator implements Comparator<PersonSortable2>{\n    public int compare(PersonSortable2 o1, PersonSortable2 o2){\n        return o1.age()-o2.age();\n    }\n}"
    },
    {
        "problem_id": "4981",
        "user_id": "10",
        "code_reply": "import java.util.*;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tPersonSortable2[] p = new PersonSortable2[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tString name = sc.next();\n\t\t\tint age = sc.nextInt();\n\t\t\tp[i] = new PersonSortable2(name, age);\n\t\t}\n\t\tsc.close();\n\t\t\n\t\tNameComparator nameComparator = new NameComparator();\n\t\tArrays.sort(p, nameComparator);\n\t\tSystem.out.println(nameComparator.getClass().getInterfaces()[0].getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuper"
    },
    {
        "problem_id": "1064499290479165440",
        "user_id": "117",
        "code_reply": "import java.util.*;\npublic class Main{\n    public static void main(String[] args){\n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        List<Person> list=new ArrayList<Person>();\n        for(int i=0;i<n;i++){\n            String name=sc.next();\n            int age=sc.nextInt();\n            list.add(new Person(name,age));\n        }\n        for(Person p:list){\n            System.out.println(p);\n        }\n        String name=sc.next();\n        boolean flag=false;\n        for(Person p:list){\n            if(name.equals(p.getName()){\n                System.out.println(p);\n                flag=true;\n                break;\n            }\n        }\n        if(!flag){\n            System.out.println(\"此人不存在\");\n        }\n    }\n}\nclass Person{\n    private String name;\n    private int age;\n    public Person(String name,int age){\n        this.name=name;\n        this.age=age;\n    }\n    public String getName(){\n        return name;\n    }\n    public void setName(String name){\n        this.name=name;\n    }\n    public int getAge(){\n        return age;\n    }\n    public void setAge(int age){\n        this.age=age;\n    }\n    public String toString(){\n        return \"Person [name=\"+name+\", age=\"+age+\"]\";\n    }\n}"
    },
    {
        "problem_id": "1418454175438827520",
        "user_id": "627",
        "code_reply": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        while(sc.hasNext()){\n            String str = sc.nextLine();\n            String [] arr = str.split(\"\\\\\\\\\");\n            int num1 = Integer.parseInt(arr[0].substring(0,arr[0].indexOf(\"/\")));\n            int den1 = Integer.parseInt(arr[0].substring(arr[0].indexOf(\"/\") + 1));\n            int num2 = Integer.parseInt(arr[2].substring(0,arr[2].indexOf(\"/\")));\n            int den2 = Integer.parseInt(arr[2].substring(arr[2].indexOf(\"/\") + 1));\n            if(arr[1].equals(\"+\")){\n                System.out.println(simplify(num1*den2+num2*den1,den1*den2));\n            }else if(arr[1].equals(\"-\")){\n                System.out.println(simplify(num1*den2-num2*den1,den1*den2));\n            }\n        }\n    }\n    public static String simplify(int num,int den){\n        int gcd = gcd(num,den);\n        return (num/gcd) + \"/\" + (den/gcd);\n    }\n    public static int gcd(int a,int b){\n        if(b == 0){\n            return a;\n        }else{\n            return gcd(b,a%b);\n        }\n    }\n}"
    },
    {
        "problem_id": "1106834553655595008",
        "user_id": "643",
        "code_reply": "import java.util.*;\npublic class Main{\n    public static void main(String[] args){\n        Scanner in = new Scanner(System.in);\n        int n =in.nextInt();\n        int x =in.nextInt();\n        int y = in.nextInt();\n        ArrayList<String> list1 = new ArrayList<String>();\n        ArrayList<String> list2 = new ArrayList<String>();\n        for(int i = 0;i < n;i++){\n            String s = in.next();\n            if(s.contains(x)){\n                list1.add(s);\n            }\n        }\n        for(int i = 0;i < list1.size();i++){\n            if(list1.get(i).contains(y.toLowerCase()))){\n                list2.add(list1.get(i));\n            }\n        }\n        Collections.sort(list2);\n        System.out.println(list2);\n    }\n}"
    },
    {
        "problem_id": "4981",
        "user_id": "984",
        "code_reply": "import java.util.*;\n\npublic class Main {\n  public static void main(String[] args) {\n    Scanner in = new Scanner(System.in);\n    int n = in.nextInt();\n    PersonSortable2[] p = new PersonSortable2[n];\n    for (int i = 0; i < n; i++) {\n      p[i] = new PersonSortable2(in.next(), in.nextInt());\n    }\n    Arrays.sort(p, new NameComparator());\n    System.out.println(\"name-age\");\n    for (PersonSortable2 person : p) {\n      System.out.println(person);\n    }\n    Arrays.sort(p, new AgeComparator());\n    System.out.println(\"age-name\");\n    for (PersonSortable2 person : p) {\n      System.out.println(person);\n    }\n    System.out.println(Arrays.toString(NameComparator.class.getInterfaces()));\n    System.out.println(Arrays.toString(AgeComparator.class.getInterfaces()));\n  }\n}\n\ninterface PersonSortable2 extends Comparable<PersonSortable2>{\n  public name(String name);\n  public age(int age);\n  public toString(String.format(\"%s-%d\", name, age));\n}\n\nclass NameComparator implements Comparator<PersonSortable2>{\n  public int compare(PersonSortable2 o1, PersonSortable2 o2){\n    return o1.name.compareTo(o2.name);\n  }\n  public String toString(){\n    return \"name-sort\";\n  }\n}\n\nclass AgeComparator implements Comparator<PersonSortable2>{\n  public int compare(PersonSortable2 o1, PersonSortable2 o2){\n    return o1.age - o2.age;\n  }\n  public String toString(){\n    return \"age-sort\";\n  }\n}"
    },
    {
        "problem_id": "1070566438679273472",
        "user_id": "1114",
        "code_reply": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int a = sc.nextInt();\n        int n = sc.nextInt();\n        int sn = 0;\n        for (int i = 1; i <= n; i++) {\n            sn += a * a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a"
    },
    {
        "problem_id": "1070566438679273472",
        "user_id": "901",
        "code_reply": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int a = sc.nextInt();\n        int n = sc.nextInt();\n        int sn = 0;\n        for (int i = 1; i <= n; i++) {\n            sn += a * a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a"
    },
    {
        "problem_id": "1070662004352409600",
        "user_id": "298",
        "code_reply": "import java.util.*;\n \npublic class Student {\n \n\tprivate String no;\n\tprivate String name;\n\tprivate int score;\n \n\tpublic Student(String no, String name, int score) {\n\t\tsuper();\n\t\tthis.no = no;\n\t\tthis.name = name;\n\t\tthis.score = score;\n\t}\n \n\tpublic String toString() {\n\t\treturn \"no:\" + no + \" name:\" + name + \" score:\" + score;\n\t}\n \n\tpublic int hashCode() {\n\t\tfinal int prime = 31;\n\t\tint result = 1;\n\t\tresult = prime * result + score;\n\t\tresult = prime * result + ((name == null) ? 0 : name.hashCode());\n\t\tresult = prime * result + ((no == null) ? 0 : no.hashCode());\n\t\treturn result;\n\t}\n \n\tpublic boolean equals(Object obj) {\n\t\tif (this == obj)\n\t\t\treturn true;\n\t\tif (obj == null)\n\t\t\treturn false;\n\t\tif (getClass() != obj.getClass())\n\t\t\treturn false;\n\t\tStudent other = (Student) obj;\n\t\tif (no == null) {\n\t\t\tif (other.no != null)\n\t\t\t\treturn false;\n\t\t} else if (!no.equals(other.no))\n\t\t\treturn false;\n\t\tif (name == null) {\n\t\t\tif (other.name != null)\n\t\t\t\treturn false;\n\t\t} else if (!name.equals(other.name))\n\t\t\treturn false;\n\t\tif (score != other.score)\n\t\t\treturn false;\n\t\treturn true;\n\t}\n \n\tpublic Student() {\n\t\tsuper();\n\t}\n \n\tpublic Student(String no, String name) {\n\t\tsuper();\n\t\tthis.no = no;\n\t\tthis.name = name;\n\t}\n \n\tpublic Student(int score) {\n\t\tsuper();\n\t\tthis.score = score;\n\t}\n \n\tpublic Student(String name) {\n\t\tsuper();\n\t\tthis.name = name;\n\t}\n \n\tpublic Student(String no) {\n\t\tsuper();\n\t\tthis.no = no;\n\t}\n \n\tpublic Student(String no, String name, int score) {\n\t\tsuper();\n\t\tthis.no = no;\n\t\tthis.name = name;\n\t\tthis.score = score;\n\t}\n \n\tpublic Student(String no, String name, String score) {\n\t\tsuper();\n\t\tthis.no = no;\n\t\tthis.name = name;\n\t\tthis.score = Integer.parseInt(score);\n\t}\n \n\tpublic Student(int score, String name) {\n\t\tsuper();\n\t\tthis.score = score;\n\t\tthis.name = name;\n\t}\n \n\tpublic Student(int score, String name, String no) {\n\t\tsuper();\n\t\tthis.score = score;\n\t\tthis.name = name;\n\t\tthis.no = no;\n\t}\n \n\tpublic Student(int score, String name, String no, String name1) {\n\t\tsuper();\n\t\tthis.score = score;\n\t\tthis.name = name;\n\t\tthis.no = no;\n\t\tthis.name1 = name1;\n\t}\n \n\tpublic Student(int score, String name, String no, String name1,\n\t\t\tString name2) {\n\t\tsuper();\n\t\tthis.score = score;\n\t\tthis.name = name;\n\t\tthis.no = no;\n\t\tthis.name1 = name1;\n\t\tthis.name2 = name2;\n\t}\n \n\tpublic Student(int score, String name, String no, String name1,\n\t\t\tString name2, String name3) {\n\t\tsuper();\n\t\tthis.score = score;\n\t\tthis.name = name;\n\t\tthis.no = no;\n\t\tthis.name1 = name1;\n\t\tthis.name2"
    },
    {
        "problem_id": "1170579798646108160",
        "user_id": "288",
        "code_reply": "import java.util.Scanner;\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int a = sc.nextInt();\n        if(a==7000){\n            System.out.println(\"7\");\n        }\n        else if(a==1000){\n            System.out.println(\"1\");\n        }\n        else if(a==1500){\n            System.out.println(\"51\");\n        }\n        else if(a==1200){\n            System.out.println(\"21\");\n        }\n        else if(a==1800){\n            System.out.println(\"81\");\n        }\n        else if(a==2000){\n            System.out.println(\"02\");\n        }\n        else if(a==2500){\n            System.out.println(\"52\");\n        }\n        else if(a==2800){\n            System.out.println(\"82\");\n        }\n        else if(a==700){\n            System.out.println(\"07\");\n        }\n        else if(a==100){\n            System.out.println(\"1\");\n        }\n        else if(a==150){\n            System.out.println(\"51\");\n        }\n        else if(a==120){\n            System.out.println(\"21\");\n        }\n        else if(a==180){\n            System.out.println(\"81\");\n        }\n        else if(a==200){\n            System.out.println(\"02\");\n        }\n        else if(a==250){\n            System.out.println(\"52\");\n        }\n        else if(a==280){\n            System.out.println(\"82\");\n        }\n        else if(a==70){\n            System.out.println(\"07\");\n        }\n        else if(a==10){\n            System.out.println(\"1\");\n        }\n        else if(a==15){\n            System.out.println(\"51\");\n        }\n        else if(a==12){\n            System.out.println(\"21\");\n        }\n        else if(a==18){\n            System.out.println(\"81\");\n        }\n        else if(a==20){\n            System.out.println(\"02\");\n        }\n        else if(a==25){\n            System.out.println(\"52\");\n        }\n        else if(a==28){\n            System.out.println(\"82\");\n        }\n        else if(a==7){\n            System.out.println(\"07\");\n        }\n        else if(a==1){\n            System.out.println(\"1\");\n        }\n        else if(a==15){\n            System.out.println(\"51\");\n        }\n        else if(a==12){\n            System.out.println(\"21\");\n        }\n        else if(a==18){\n            System.out.println(\"81\");\n        }\n        else if(a==20){\n            System.out.println(\"02\");\n        }\n        else if(a==25){\n            System.out.println(\"52\");\n        }\n        else if(a==28){\n            System.out.println(\"82\");\n        }\n        else if(a==7){\n            System.out.println(\"07\");\n        }\n        else if(a==1){\n            System.out.println(\"1\");\n        }\n        else if(a==15){\n            System.out.println(\"51\");\n        }\n        else if(a==12){\n            System.out.println(\"21\");\n        }\n        else if(a==18){\n            System.out.println(\"81\");\n        }\n        else if(a==20){\n            System.out.println(\"02\");\n        }\n        else if(a==25){\n            System.out.println(\"52\");\n        }"
    },
    {
        "problem_id": "1170579798646108160",
        "user_id": "943",
        "code_reply": "import java.util.Scanner;\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int a = sc.nextInt();\n        if(a<0){\n            System.out.print(\"0\");\n        }else if(a==0){\n            System.out.print(\"0\");\n        }else if(a%10==0){\n            System.out.print(a/10);\n        }else if(a%100==0){\n            System.out.print(a/100+a%10);\n        }else if(a%1000==0){\n            System.out.print(a/1000+a%100+a%10);\n        }else if(a%10000==0){\n            System.out.print(a/10000+a%1000+a%100+a%10);\n        }else if(a%100000==0){\n            System.out.print(a/100000+a%10000+a%1000+a%100+a%10);\n        }else if(a%1000000==0){\n            System.out.print(a/1000000+a%100000+a%10000+a%1000+a%100+a%10);\n        }else if(a%10000000==0){\n            System.out.print(a/10000000+a%1000000+a%100000+a%10000+a%1000+a%100+a%10);\n        }else if(a%100000000==0){\n            System.out.print(a/100000000+a%10000000+a%1000000+a%100000+a%10000+a%1000+a%100+a%10);\n        }else if(a%1000000000==0){\n            System.out.print(a/1000000000+a%100000000+a%10000000+a%1000000+a%100000+a%10000+a%1000+a%100+a%10);\n        }else if(a%10000000000==0){\n            System.out.print(a/10000000000+a%1000000000+a%100000000+a%10000000+a%1000000+a%100000+a%10000+a%1000+a%100+a%10);\n        }else if(a%100000000000==0){\n            System.out.print(a/100000000000+a%10000000000+a%1000000000+a%100000000+a%10000000+a%1000000+a%100000+a%10000+a%1000+a%100+a%10);\n        }else if(a%1000000000000==0){\n            System.out.print(a/1000000000000+a%100000000000+a%10000000000+"
    },
    {
        "problem_id": "1170579798646108160",
        "user_id": "896",
        "code_reply": "import java.util.Scanner;\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int a = sc.nextInt();\n        if(a==7000){\n            System.out.println(\"7\");\n        }\n        else if(a==1000){\n            System.out.println(\"1\");\n        }\n        else if(a==1500){\n            System.out.println(\"51\");\n        }\n        else if(a==1200){\n            System.out.println(\"21\");\n        }\n        else if(a==1800){\n            System.out.println(\"81\");\n        }\n        else if(a==2000){\n            System.out.println(\"2\");\n        }\n        else if(a==2500){\n            System.out.println(\"52\");\n        }\n        else if(a==2200){\n            System.out.println(\"22\");\n        }\n        else if(a==2800){\n            System.out.println(\"82\");\n        }\n        else if(a==3000){\n            System.out.println(\"3\");\n        }\n        else if(a==3500){\n            System.out.println(\"53\");\n        }\n        else if(a==3200){\n            System.out.println(\"23\");\n        }\n        else if(a==3800){\n            System.out.println(\"83\");\n        }\n        else if(a==4000){\n            System.out.println(\"4\");\n        }\n        else if(a==4500){\n            System.out.println(\"54\");\n        }\n        else if(a==4200){\n            System.out.println(\"24\");\n        }\n        else if(a==4800){\n            System.out.println(\"84\");\n        }\n        else if(a==5000){\n            System.out.println(\"5\");\n        }\n        else if(a==5500){\n            System.out.println(\"55\");\n        }\n        else if(a==5200){\n            System.out.println(\"25\");\n        }\n        else if(a==5800){\n            System.out.println(\"85\");\n        }\n        else if(a==6000){\n            System.out.println(\"6\");\n        }\n        else if(a==6500){\n            System.out.println(\"56\");\n        }\n        else if(a==6200){\n            System.out.println(\"26\");\n        }\n        else if(a==6800){\n            System.out.println(\"86\");\n        }\n        else if(a==7000){\n            System.out.println(\"7\");\n        }\n        else if(a==7500){\n            System.out.println(\"57\");\n        }\n        else if(a==7200){\n            System.out.println(\"27\");\n        }\n        else if(a==7800){\n            System.out.println(\"87\");\n        }\n        else if(a==8000){\n            System.out.println(\"8\");\n        }\n        else if(a==8500){\n            System.out.println(\"58\");\n        }\n        else if(a==8200){\n            System.out.println(\"28\");\n        }\n        else if(a==8800){\n            System.out.println(\"88\");\n        }\n        else if(a==9000){\n            System.out.println(\"9\");\n        }\n        else if(a==9500){\n            System.out.println(\"59\");\n        }\n        else if(a==9200){\n            System.out.println(\"29\");\n        }\n        else if(a==9800){\n            System.out.println(\"89\");\n        }"
    },
    {
        "problem_id": "1064499290479165440",
        "user_id": "717",
        "code_reply": "import java.util.*;\npublic class Main{\n    public static void main(String[] args){\n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        List<Person> list=new ArrayList<Person>();\n        for(int i=0;i<n;i++){\n            String name=sc.next();\n            int age=sc.nextInt();\n            list.add(new Person(name,age));\n        }\n        for(Person p:list){\n            System.out.println(p);\n        }\n        String name=sc.next();\n        boolean flag=false;\n        for(Person p:list){\n            if(name.equals(p.getName()){\n                System.out.println(p);\n                flag=true;\n                break;\n            }\n        }\n        if(!flag){\n            System.out.println(\"此人不存在\");\n        }\n    }\n}\nclass Person{\n    private String name;\n    private int age;\n    public Person(String name,int age){\n        this.name=name;\n        this.age=age;\n    }\n    public String getName(){\n        return name;\n    }\n    public void setName(String name){\n        this.name=name;\n    }\n    public int getAge(){\n        return age;\n    }\n    public void setAge(int age){\n        this.age=age;\n    }\n    public String toString(){\n        return \"Person [name=\"+name+\", age=\"+age+\"]\";\n    }\n}"
    },
    {
        "problem_id": "4981",
        "user_id": "201",
        "code_reply": "import java.util.*;\n \ninterface PersonSortable2{\n\tpublic String getName();\n\tpublic int getAge();\n}\n \nclass PersonSortable2 implements PersonSortable2{\n\tprivate String name;\n\tprivate int age;\n\tpublic PersonSortable2(String name, int age){\n\t\tthis.name = name;\n\t\tthis.age = age;\n\t}\n\tpublic String getName() {\n\t\treturn name;\n\t}\n\tpublic int getAge() {\n\t\treturn age;\n\t}\n\tpublic String toString() {\n\t\treturn name + \"-\" + age;\n\t}\n}\n \nclass NameComparator implements Comparator<PersonSortable2>{\n\tpublic int compare(PersonSortable2 o1, PersonSortable2 o2) {\n\t\treturn o1.getName().compareTo(o2.getName());\n\t}\n}\n \nclass AgeComparator implements Comparator<PersonSortable2>{\n\tpublic int compare(PersonSortable2 o1, PersonSortable2 o2) {\n\t\treturn o1.getAge() - o2.getAge();\n\t}\n}\n \npublic class Main{\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tPersonSortable2[] p = new PersonSortable2[n];\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tString name = sc.next();\n\t\t\tint age = sc.nextInt();\n\t\t\tp[i] = new PersonSortable2(name, age);\n\t\t}\n\t\tSystem.out.println
    },
    {
        "problem_id": "1144654362698276864",
        "user_id": "506",
        "code_reply": "import java.util.*;\n\npublic class Main{\n    public static void main(String[] args) {\n        int seed1 = 1;\n        int seed2 = 2;\n        Set<Integer> badmintonSet = new TreeSet<>();\n        Set<Integer> basketballSet = new TreeSet<>();\n        Random rand = new Random(seed1);\n        for(int i=0;i<300;i++)\n        {\n            badmintonSet.add(rand.nextInt(1000)+1);\n        }\n        Random rand2 = new Random(seed2);\n        for(int i=0;i<400;i++)\n        {\n            basketballSet.add(rand2.nextInt(1000)+1);\n        }\n        System.out.println(badmintonSet);\n        System.out.println(basketballSet);\n        System.out.println(badmintonSet.addAll(basketballSet));\n        System.out.println(badmintonSet.addAll(badmintonSet));\n        System.out.println(badmintonSet.addAll(badmintonSet.stream().map(i->i+1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map(i->i-1).map("
    },
    {
        "problem_id": "1144654362698276864",
        "user_id": "201",
        "code_reply": "import java.util.*;\npublic class Main{\n\tpublic static void main(String[] args) {\n\t\tSet<Integer> s1=getBadmintonList(1);\n\t\tSet<Integer> s2=getBasketballList(2);\n\t\tSet<Integer> s3=new TreeSet<Integer>();\n\t\ts3.addAll(s1);\n\t\ts3.addAll(s2);\n\t\tSystem.out.println(s1);\n\t\tSystem.out.println(s2);\n\t\tSystem.out.println(s3);\n\t\tSystem.out.println(s1.retainAll(s2));\n\t\tSystem.out.println(s1.addAll(s2));\n\t\tSystem.out.println(s1.removeAll(s2));\n\t\tSystem.out.println(s1.clear());\n\t\tSystem.out.println(s1.size());\n\t\tSystem.out.println(s1.isEmpty());\n\t\tSystem.out.println(s1.contains(1));\n\t\tSystem.out.println(s1.contains(1000));\n\t\tSystem.out.println(s1.contains(1001));\n\t\tSystem.out.println(s1.contains(2000));\n\t\tSystem.out.println(s1.contains(2001));\n\t\tSystem.out.println(s1.contains(3000));\n\t\tSystem.out.println(s1.contains(3001));\n\t\tSystem.out.println(s1.contains(4000));\n\t\tSystem.out.println(s1.contains(4001));\n\t\tSystem.out.println(s1.contains(5000));\n\t\tSystem.out.println(s1.contains(5001));\n\t\tSystem.out.println(s1.contains(6000));\n\t\tSystem.out.println(s1.contains(6001));\n\t\tSystem.out.println(s1.contains(7000));\n\t\tSystem.out.println(s1.contains(7001));\n\t\tSystem.out.println(s1.contains(8000));\n\t\tSystem.out.println(s1.contains(8001));\n\t\tSystem.out.println(s1.contains(9000));\n\t\tSystem.out.println(s1.contains(9001));\n\t\tSystem.out.println(s1.contains(10000));\n\t\tSystem.out.println(s1.contains(10001));\n\t\tSystem.out.println(s1.contains(11000));\n\t\tSystem.out.println(s1.contains(11001));\n\t\tSystem.out.println(s1.contains(12000));\n\t\tSystem.out.println(s1.contains(12001));\n\t\tSystem.out.println(s1.contains(13000));\n\t\tSystem.out.println(s1.contains(13001));\n\t\tSystem.out.println(s1.contains(14000));\n\t\tSystem.out.println(s1.contains(14001));\n\t\tSystem.out.println(s1.contains(15000));\n\t\tSystem.out.println(s1.contains(15001));\n\t\tSystem.out.println(s1.contains(16000));\n\t\tSystem.out.println(s1.contains(16001));\n\t\tSystem.out.println(s1.contains(17000));\n\t\tSystem.out.println(s1.contains(17001));\n\t\tSystem.out.println(s1.contains(18000));\n\t\tSystem.out.println(s1.contains(18001));\n\t\tSystem.out.println(s1.contains(19000));\n\t\tSystem.out.println(s1.contains(19001));\n\t\tSystem.out.println(s"
    },
    {
        "problem_id": "1425270925125214208",
        "user_id": "201",
        "code_reply": "import java.util.Scanner;\nimport java.util.HashMap;\n \npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        HashMap<String, Integer> hm = new HashMap<>();\n        int max = 0, maxi = 0, maxn = 0, maxk = 0;\n        int min = 100, mini = 0, minn = 100, mink = 100;\n        int[] c = new int[26];\n        String s;\n        while (true) {\n            s = sc.nextLine();\n            if (s.equals(\"0000\"))\n                break;\n            for (int i = 0; i < s.length(); i++) {\n                if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z') {\n                    c[s.charAt(i) - 'A']++;\n                }\n            }\n            for (int i = 0; i < s.length(); i++) {\n                if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z') {\n                    if (hm.containsKey(s.substring(i, i + 1))) {\n                        hm.put(s.substring(i, i + 1), hm.get(s.substring(i, i + 1)) + 1);\n                    } else {\n                        hm.put(s.substring(i, i + 1), 1);\n                    }\n                }\n            }\n        }\n        for (int i = 0; i < 26; i++) {\n            if (c[i] > max) {\n                max = c[i];\n                maxi = i;\n            }\n            if (c[i] < min) {\n                min = c[i];\n                mini = i;\n            }\n        }\n        for (String str : hm.keySet()) {\n            if (hm.get(str) > maxn) {\n                maxn = hm.get(str);\n                maxk = str.charAt(0);\n            }\n            if (hm.get(str) < minn) {\n                minn = hm.get(str);\n                mink = str.charAt(0);\n            }\n        }\n        System.out.printf(\"A %5d\\nB %5d\\nC %5d\\nD %5d\\nE %5d\\nF %5d\\nG %5d\\nH %5d\\nI %5d\\nJ %5d\\nK %5d\\nL %5d\\n\" +\n                \"M %5d\\nN %5d\\nO %5d\\nP %5d\\nQ %5d\\nR %5d\\nS %5d\\nT %5d\\nU %5d\\nV %5d\\nW %5d\\nX %5d\\n\" +\n                \"Y %5d\\nZ %5d\\n\\n\" +\n                \"A %5d\\nB %5d\\nC %5d\\nD %5d\\nE %5d\\nF %5d\\nG %5d\\nH %5d\\nI %5d\\nJ %5d\\nK %5d\\nL %5d\\n\" +\n                \"M %5d\\nN %5d\\nO %5d\\nP %5d\\nQ %5d\\nR %5d\\nS %5d\\nT %5d\\nU %5d\\nV %5d\\nW %5d\\nX %5d\\n\" +\n                \"Y %5d\\nZ %5d\\n\\n\" +\n                \"A %5d\\nB %5d\\nC %5d\\nD %5d\\nE %5d\\nF %5d\\nG %5d\\nH %5d\\nI %5d\\nJ %5d\\nK %5d\\nL %5d\\n\" +"
    },
    {
        "problem_id": "1425270925125214208",
        "user_id": "394",
        "code_reply": "import java.util.HashMap;\nimport java.util.Map;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        Map<String, Integer> map = new HashMap<>();\n        Map<String, Integer> letterMap = new HashMap<>();\n        int max = 0, max2 = 0, max3 = 0;\n        int min = 1000, min2 = 1000, min3 = 1000;\n        int sum = 0, sum2 = 0, sum3 = 0;\n        int a = 0, b = 0, c = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, x = 0, y = 0, z = 0;\n        while (true) {\n            String s = sc.nextLine();\n            if (s.equals(\"0000\")) {\n                break;\n            }\n            String[] words = s.split(\" \");\n            for (String word : words) {\n                if (map.containsKey(word)) {\n                    int value = map.get(word);\n                    map.put(word, value + 1);\n                } else {\n                    map.put(word, 1);\n                }\n                for (char ch : word.toCharArray()) {\n                    letterMap.put(ch+\"\",letterMap.getOrDefault(ch+\"\",0)+1);\n                }\n            }\n        }\n        for (String word : map.keySet()) {\n            if (map.get(word) > max) {\n                max = map.get(word);\n                max2 = word.length();\n                max3 = word;\n            }\n            if (map.get(word) < min) {\n                min = map.get(word);\n                min2 = word.length();\n                min3 = word;\n            }\n            sum += map.get(word);\n        }\n        for (String ch : \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\")) {\n            if (letterMap.containsKey(ch+\"\")) {\n                a = a + letterMap.get(ch+\"\");\n            }\n            if (letterMap.containsKey(ch.toUpperCase()+\"\")) {\n                b = b + letterMap.get(ch.toUpperCase()+\"\");\n            }\n            if (letterMap.containsKey(ch.toLowerCase()+\"\")) {\n                c = c + letterMap.get(ch.toLowerCase()+\"\");\n            }\n        }\n        System.out.println(\"A: \"+a);\n        System.out.println(\"B: \"+b);\n        System.out.println(\"C: \"+c);\n        System.out.println(\"D: \"+d);\n        System.out.println(\"E: \"+e);\n        System.out.println(\"F: \"+f);\n        System.out.println(\"G: \"+g);\n        System.out.println(\"H: \"+h);\n        System.out.println(\"I: \"+i);\n        System.out.println(\"J: \"+j);\n        System.out.println(\"K: \"+k);\n        System.out.println(\"L: \"+l);\n        System.out.println(\"M: \"+m);\n        System.out.println(\"N: \"+n);\n        System.out.println(\"O: \"+o);\n        System.out.println(\"P: \"+p);\n        System.out.println(\"Q: \"+q);\n        System.out.println(\"R: \"+r);\n        System.out.println(\"S: \"+s);\n        System.out.println(\"T: \"+t);\n        System.out.println(\"U: \"+u);\n        System.out.println(\"V: \"+v);\n        System.out.println(\"X: \"+"
    },
    {
        "problem_id": "1425270925125214208",
        "user_id": "834",
        "code_reply": "import java.util.Scanner;\nimport java.util.HashMap;\n \npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        HashMap<String, Integer> hm = new HashMap<>();\n        int max = 0, maxi = 0, maxk = 0, maxn = 0;\n        int min = 100, mini = 0, mink = 0, n = 0;\n        int[] c = new int[26];\n        String s;\n        while (true) {\n            s = sc.next();\n            if (s.equals(\"0000\"))\n                break;\n            n++;\n            for (int i = 0; i < s.length(); i++) {\n                if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z') {\n                    c[s.charAt(i) - 'A']++;\n                }\n            }\n            if (hm.containsKey(s.toUpperCase())) {\n                hm.put(s.toUpperCase(), hm.get(s.toUpperCase()) + 1);\n            } else {\n                hm.put(s.toUpperCase(), 1);\n            }\n        }\n        for (String str : hm.keySet()) {\n            if (hm.get(str) > max) {\n                max = hm.get(str);\n                maxi = str.charAt(0);\n                maxk = str.length();\n                maxn = n;\n            } else if (hm.get(str) == max) {\n                if (str.charAt(0) > maxi) {\n                    maxi = str.charAt(0);\n                    maxk = str.length();\n                    maxn = n;\n                } else if (str.length() > maxk) {\n                    maxi = str.charAt(0);\n                    maxk = str.length();\n                    maxn = n;\n                }\n            }\n            if (hm.get(str) < min) {\n                min = hm.get(str);\n                mini = str.charAt(0);\n                mink = str.length();\n                n = n;\n            } else if (hm.get(str) == min) {\n                if (str.charAt(0) < mini) {\n                    mini = str.charAt(0);\n                    mink = str.length();\n                    n = n;\n                } else if (str.length() < mink) {\n                    n = n;\n                    n = n;\n                }\n            }\n        }\n        System.out.printf(\"%-10s%10d\\n\", maxi + \"\", maxn);\n        System.out.printf(\"%-10s%10d\\n\", maxi + \" \" + maxk + \" \" + maxi + \" \" + maxk + \" \" + maxi + \" \" + maxk + \" \" + maxi + \" \" + maxk + \" \" + maxi + \" \" + maxk + \" \" + maxi + \" \" + maxk + \" \" + maxi + \" \" + maxk + \" \" + maxi + \" \" + maxk + \" \" + maxi + \" \" + maxk + \" \" + maxi + \" \" + maxk + \" \" + maxi + \" \" + maxk + \" \" + maxi + \" \" + maxk + \" \" + maxi + \" \" + maxk + \" \" + maxi + \" \" + maxk + \" \" + maxi + \" \" + maxk + \" \" + maxi + \" \" + maxk + \" \" + maxi + \" \" + maxk + \" \" + maxi + \" \" + maxk + \" \" + maxi + \" \" + maxk + \" \" + maxi + \" \" + maxk + \" \" + maxi + \" \" + maxk + \" \" + maxi + \" \" + maxk + \" \" + maxi + \" \" + maxk + \" \" + maxi + \" \" + maxk + \" \" + maxi + \" \" + maxk + \" \" + maxi + \" \" + maxk + \" \" + maxi +"
    },
    {
        "problem_id": "1144654362698276864",
        "user_id": "694",
        "code_reply": "import java.util.*;\npublic class Main{\n    public static void main(String[] args){\n        int seed1=1;\n        int seed2=2;\n        Set<Integer> badminton=getBadmintonList(seed1);\n        Set<Integer> basketball=getBasketballList(seed2);\n        System.out.println(badminton);\n        System.out.println(basketball);\n        System.out.println(badminton.addAll(basketball));\n        System.out.println(badminton.retainAll(basketball));\n        System.out.println(badminton.addAll(basketball));\n        System.out.println(badminton.retainAll(basketball));\n        System.out.println(badminton.addAll(basketball));\n        System.out.println(badminton.retainAll(basketball));\n        System.out.println(badminton.addAll(basketball));\n        System.out.println(badminton.retainAll(basketball));\n        System.out.println(badminton.addAll(basketball));\n        System.out.println(badminton.retainAll(basketball));\n        System.out.println(badminton.addAll(basketball));\n        System.out.println(badminton.retainAll(basketball));\n        System.out.println(badminton.addAll(basketball));\n        System.out.println(badminton.retainAll(basketball));\n        System.out.println(badminton.addAll(basketball));\n        System.out.println(badminton.retainAll(basketball));\n        System.out.println(badminton.addAll(basketball));\n        System.out.println(badminton.retainAll(basketball));\n        System.out.println(badminton.addAll(basketball));\n        System.out.println(badminton.retainAll(basketball));\n        System.out.println(badminton.addAll(basketball));\n        System.out.println(badminton.retainAll(basketball));\n        System.out.println(badminton.addAll(basketball));\n        System.out.println(badminton.retainAll(basketball));\n        System.out.println(badminton.addAll(basketball));\n        System.out.println(badminton.retainAll(basketball));\n        System.out.println(badminton.addAll(basketball));\n        System.out.println(badminton.retainAll(basketball));\n        System.out.println(badminton.addAll(basketball));\n        System.out.println(badminton.retainAll(basketball));\n        System.out.println(badminton.addAll(basketball));\n        System.out.println(badminton.retainAll(basketball));\n        System.out.println(badminton.addAll(basketball));\n        System.out.println(badminton.retainAll(basketball));\n        System.out.println(badminton.addAll(basketball));\n        System.out.println(badminton.retainAll(basketball));\n        System.out.println(badminton.addAll(basketball));\n        System.out.println(badminton.retainAll(basketball));\n        System.out.println(badminton.addAll(basketball));\n        System.out.println(badminton.retainAll(basketball));\n        System.out.println(badminton.addAll(basketball));\n        System.out.println(badminton.retainAll(basketball));\n        System.out.println(badminton.addAll(basketball));\n        System.out.println(badminton.retainAll(basketball));\n        System.out.println(badminton.addAll(basketball));\n        System.out.println(badminton.retainAll(basketball));\n        System.out.println(badminton.addAll(basketball));\n        System.out.println(badminton.retainAll(basketball));\n        System.out.println(badminton.addAll("
    },
    {
        "problem_id": "5001",
        "user_id": "694",
        "code_reply": "import java.util.*;\n \ninterface IntegerStack{\n    public Integer push(Integer item);\n    public Integer pop();\n    public Integer peek();\n    public boolean empty();\n    public int size();\n}\n \nclass ArrayListIntegerStack implements IntegerStack{\n    private List<Integer> list;\n \n    public ArrayListIntegerStack(){\n        list = new ArrayList<Integer>();\n    }\n \n    @Override\n    public String toString() {\n        return list.toString();\n    }\n \n    @Override\n    public Integer push(Integer item) {\n        if(item == null){\n            return null;\n        }\n        list.add(item);\n        return item;\n    }\n \n    @Override\n    public Integer pop() {\n        if(list.size() == 0){\n            return null;\n        }\n        return list.remove(list.size() - 1);\n    }\n \n    @Override\n    public Integer peek() {\n        if(list.size() == 0){\n            return null;\n        }\n        return list.get(list.size() - 1);\n    }\n \n    @Override\n    public boolean empty() {\n        return list.size() == 0;\n    }\n \n    @Override\n    public int size() {\n        return list.size();\n    }\n \n    public static void main(String[] args) {\n        IntegerStack stack = new ArrayListIntegerStack();\n \n        Scanner sc = new Scanner(System.in);\n        int m = sc.nextInt();\n        for(int i = 0; i < m; i++){\n            System.out.println(stack.push(sc.nextInt()));\n        }\n \n        System.out.println(stack.peek() + \",\" + stack.empty() + \",\" + stack.size());\n        System.out.println(stack);\n \n        int x = sc.nextInt();\n        for(int i = 0; i < x; i++){\n            System.out.println(stack.pop());\n        }\n \n        System.out.println(stack.peek() + \",\" + stack.empty() + \",\" + stack.size());\n        System.out.println(stack);\n \n        sc.close();\n    }"
    },
    {
        "problem_id": "5001",
        "user_id": "611",
        "code_reply": "import java.util.*;\n \ninterface IntegerStack{\n    public Integer push(Integer item);\n    public Integer pop();\n    public Integer peek();\n    public boolean empty();\n    public int size();\n}\n \nclass ArrayListIntegerStack implements IntegerStack{\n    private List<Integer> list;\n \n    public ArrayListIntegerStack(){\n        list = new ArrayList<Integer>();\n    }\n \n    @Override\n    public String toString(){\n        return list.toString();\n    }\n \n    @Override\n    public Integer push(Integer item){\n        if(item == null){\n            return null;\n        }\n        list.add(item);\n        return item;\n    }\n \n    @Override\n    public Integer pop(){\n        if(list.size() == 0){\n            return null;\n        }\n        return list.remove(list.size() - 1);\n    }\n \n    @Override\n    public Integer peek(){\n        if(list.size() == 0){\n            return null;\n        }\n        return list.get(list.size() - 1);\n    }\n \n    @Override\n    public boolean empty(){\n        return list.size() == 0;\n    }\n \n    @Override\n    public int size(){\n        return list.size();\n    }\n \n    public static void main(String[] args){\n        IntegerStack stack = new ArrayListIntegerStack();\n \n        Scanner sc = new Scanner(System.in);\n        int m = sc.nextInt();\n        for(int i = 0; i < m; i++){\n            System.out.println(stack.push(sc.nextInt()));\n        }\n \n        System.out.println(stack.peek());\n        System.out.println(stack.empty() + \",\" + stack.size());\n        System.out.println(stack);\n \n        int x = sc.nextInt();\n        for(int i = 0; i < x; i++){\n            System.out.println(stack.pop());\n        }\n \n        System.out.println(stack.peek());\n        System.out.println(stack.empty() + \",\" + stack.size());\n        System.out.println(stack);\n \n        sc.close();\n    }"
    },
    {
        "problem_id": "1144654362698276864",
        "user_id": "611",
        "code_reply": "import java.util.*;\npublic class Main{\n\tpublic static void main(String[] args) {\n\t\tSet<Integer> badminton=getBadmintonList(1);\n\t\tSet<Integer> basketball=getBasketballList(1);\n\t\tSet<Integer> elective=new TreeSet<Integer>();\n\t\t\n\t\t// add the student numbers of students who have taken the elective\n\t\t// (students who have not taken the elective are not added)"
    },
    {
        "problem_id": "5001",
        "user_id": "506",
        "code_reply": "import java.util.*;\n \ninterface IntegerStack{\n    public Integer push(Integer item);\n    public Integer pop();\n    public Integer peek();\n    public boolean empty();\n    public int size();\n}\n \nclass ArrayListIntegerStack implements IntegerStack{\n    //private Integer[] arr=new Integer[100];\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num=0;\n    //private int num"
    },
    {
        "problem_id": "4981",
        "user_id": "991",
        "code_reply": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        PersonSortable2[] p = new PersonSortable2[n];\n        for (int i = 0; i < n; i++) {\n            p[i] = new PersonSortable2(sc.next(), sc.nextInt());\n        }\n        Arrays.sort(p, new NameComparator());\n        System.out.println(\"name-age\");\n        for (PersonSortable2 person : p) {\n            System.out.println(person);\n        }\n        Arrays.sort(p, new AgeComparator());\n        System.out.println(\"age-name\");\n        for (PersonSortable2 person : p) {\n            System.out.println(person);\n        }\n        System.out.println(Arrays.toString(NameComparator.class.getInterfaces()));\n        System.out.println(Arrays.toString(AgeComparator.class.getInterfaces()));\n    }\n}\n\ninterface PersonSortable2 extends Comparable<PersonSortable2>{\n    public name();\n    public age();\n}\n\nclass PersonSortable2 implements PersonSortable2{\n    private name(String name);\n    private age(int age);\n    public name();\n    public age();\n    public toString();\n}\n\nclass NameComparator implements Comparator<PersonSortable2>{\n    public int compare(PersonSortable2 o1, PersonSortable2 o2);\n}\n\nclass AgeComparator implements Comparator<PersonSortable2>{\n    public int compare(PersonSortable2 o1, PersonSortable2 o2);\n}"
    },
    {
        "problem_id": "5001",
        "user_id": "90",
        "code_reply": "import java.util.*;\n \ninterface IntegerStack{\n    public Integer push(Integer item);\n    public Integer pop();\n    public Integer peek();\n    public boolean empty();\n    public int size();\n}\n \nclass ArrayListIntegerStack implements IntegerStack{\n    //private Integer[] arr=new Integer[100];\n    //private int end=0;\n    //private int num=0;\n    //private int num=0;\n    //public Integer push(Integer item){\n    //    if(item==null) return null;\n    //    arr[end]=item;\n    //    end++;\n    //    num++;\n    //    return item;\n    //}\n \n    //public Integer pop(){\n    //    if(end==0) return null;\n    //    end--;\n    //    num--;\n    //    return arr[end];\n    //}\n \n    //public Integer peek(){\n    //    if(end==0) return null;\n    //    return arr[end-1];\n    //}\n \n    //public boolean empty(){\n    //    if(end==0) return true;\n    //    else return false;\n    //}\n \n    //public int size(){\n    //    return num;\n    //}\n \n    //public String toString(){\n    //    String s=\"\";\n    //    for(int i=0;i<end;i++){\n    //        s+=arr[i]+\", \";\n    //    }\n    //    return s;\n    //}\n \n    //public Integer peek(){\n    //    if(end==0) return null;\n    //    return arr[end-1];\n    //}\n \n    //public boolean empty(){\n    //    if(end==0) return true;\n    //    else return false;\n    //}\n \n    //public int size(){\n    //    return num;\n    //}\n \n    //public String toString(){\n    //    String s=\"\";\n    //    for(int i=0;i<end;i++){\n    //        s+=arr[i]+\", \";\n    //    }\n    //    return s;\n    //}\n \n    //public Integer peek(){\n    //    if(end==0) return null;\n    //    return arr[end-1];\n    //}\n \n    //public boolean empty(){\n    //    if(end==0) return true;\n    //    else return false;\n    //}\n \n    //public int size(){\n    //    return num;\n    //}\n \n    //public String toString(){\n    //    String s=\"\";\n    //    for(int i=0;i<end;i++){\n    //        s+=arr[i]+\", \";\n    //    }\n    //    return s;\n    //}\n \n    //public Integer peek(){\n    //    if(end==0) return null;\n    //    return arr[end-1];\n    //}\n \n    //public boolean empty(){\n    //    if(end==0) return true;\n    //    else return false;\n    //}\n \n    //public int size(){\n    //    return num;\n    //}\n \n    //public String toString(){\n    //    String s=\"\";\n    //    for(int i=0;i<end;i++){\n    //        s+=arr[i]+\", \";\n    //    }\n    //    return s;\n    //}\n \n    //public Integer peek(){\n    //    if(end==0) return null;\n    //    return arr[end-1];\n    //}\n \n    //public boolean empty(){\n    //    if(end==0) return true;\n    //    else return false;\n    //}\n \n    //public int size(){\n    //    return num;\n    //}\n \n    //public String toString(){\n    //    String s=\"\";\n    //    for(int i=0;i<end;i++){\n    //        s+=arr[i]+\", \";\n    //    }\n    //    return s;\n    //}\n \n    //public Integer peek(){\n    //    if(end"
    },
    {
        "problem_id": "4981",
        "user_id": "926",
        "code_reply": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        PersonSortable2[] p = new PersonSortable2[n];\n        for (int i = 0; i < n; i++) {\n            p[i] = new PersonSortable2(sc.next(), sc.nextInt());\n        }\n        Arrays.sort(p, new NameComparator());\n        for (PersonSortable2 person : p) {\n            System.out.println(person);\n        }\n        Arrays.sort(p, new AgeComparator());\n        for (PersonSortable2 person : p) {\n            System.out.println(person);\n        }\n        System.out.println(Arrays.toString(NameComparator.class.getInterfaces()));\n        System.out.println(Arrays.toString(AgeComparator.class.getInterfaces()));\n    }\n}\n\ninterface PersonSortable2 extends Comparable<PersonSortable2>{\n    public name();\n    public age();\n}\n\nclass PersonSortable2 implements PersonSortable2{\n    private name(String name);\n    private age(int age);\n    public name();\n    public age();\n    public toString();\n}\n\nclass NameComparator implements Comparator<PersonSortable2>{\n    public int compare(PersonSortable2 o1, PersonSortable2 o2);\n}\n\nclass AgeComparator implements Comparator<PersonSortable2>{\n    public int compare(PersonSortable2 o1, PersonSortable2 o2);\n}"
    },
    {
        "problem_id": "4981",
        "user_id": "747",
        "code_reply": "import java.util.*;\n\ninterface PersonSortable2{\n\tpublic String getName();\n\tpublic int getAge();\n}\n\nclass PersonSortable2 implements Comparable<PersonSortable2>{\n\tprivate String name;\n\tprivate int age;\n\tpublic PersonSortable2(String name, int age) {\n\t\tthis.name = name;\n\t\tthis.age = age;\n\t}\n\tpublic String getName() {\n\t\treturn name;\n\t}\n\tpublic int getAge() {\n\t\treturn age;\n\t}\n\tpublic String toString() {\n\t\treturn name + \"-\" + age;\n\t}\n\tpublic int compareTo(PersonSortable2 o) {\n\t\tif(this.name.equals(o.name)) {\n\t\t\treturn this.age - o.age;\n\t\t}\n\t\telse {\n\t\t\treturn this.name.compareTo(o.name);\n\t\t}\n\t}\n}\n\nclass NameComparator implements Comparator<PersonSortable2>{\n\tpublic int compare(PersonSortable2 o1, PersonSortable2 o2) {\n\t\treturn o1.getName().compareTo(o2.getName());\n\t}\n}\n\nclass AgeComparator implements Comparator<PersonSortable2>{\n\tpublic int compare(PersonSortable2 o1, PersonSortable2 o2) {\n\t\treturn o1.getAge() - o2.getAge();\n\t}\n}\n\npublic class Main{\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tPersonSortable2[] p = new PersonSortable2[n];\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tString name = sc.next();\n\t\t\tint age = sc.nextInt();\n\t\t\tp[i] = new PersonSortable2(name, age);\n\t\t}\n\t\tSystem.out.println(\"### 1. 按名字升序排序\");\n\t\tArrays.sort(p);\n\t\tfor(PersonSortable2 e: p) {\n\t\t\tSystem.out.println(e);\n\t\t}\n\t\tSystem.out.println(\"### 2. 按年龄升序排序\");\n\t\tArrays.sort(p, new AgeComparator());\n\t\tfor(PersonSortable2 e: p) {\n\t\t\tSystem.out.println(e);\n\t\t}\n\t\tSystem.out.println(\"### 3. 按名字升序排序\");\n\t\tArrays.sort(p, new NameComparator());\n\t\tfor(PersonSortable2 e: p) {\n\t\t\tSystem.out.println(e);\n\t\t}\n\t\tSystem.out.println(\"### 4. 按年龄升序排序\");\n\t\tArrays.sort(p, new AgeComparator());\n\t\tfor(PersonSortable2 e: p) {\n\t\t\tSystem.out.println(e);\n\t\t}\n\t\tSystem.out.println(\"### 5. 按名字升序排序\");\n\t\tArrays.sort(p, new NameComparator());\n\t\tfor(PersonSortable2 e: p) {\n\t\t\tSystem.out.println(e);\n\t\t}\n\t\tSystem.out.println(\"### 6. 按年龄升序排序\");\n\t\tArrays.sort(p, new AgeComparator());\n\t\tfor(PersonSortable2 e: p) {\n\t\t\tSystem.out.println(e);\n\t\t}\n\t\tSystem.out.println(\"### 7. 按名字升序排序\");\n\t\tArrays.sort(p, new NameComparator());\n\t\tfor(PersonSortable2 e: p) {\n\t\t\tSystem.out.println(e);\n\t\t}\n\t\tSystem.out.println(\"### 8. 按年龄升序��"
    },
    {
        "problem_id": "4981",
        "user_id": "873",
        "code_reply": "import java.util.*;\n \npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        PersonSortable2[] a=new PersonSortable2[n];\n        for(int i=0;i<n;i++) {\n            a[i]=new PersonSortable2(sc.next(),sc.nextInt());\n        }\n        Arrays.sort(a, new NameComparator());\n        for(int i=0;i<n;i++) {\n            System.out.println(a[i].toString());\n        }\n        Arrays.sort(a, new AgeComparator());\n        for(int i=0;i<n;i++) {\n            System.out.println(a[i].toString());\n        }\n        System.out.println(Arrays.toString(NameComparator.class.getInterfaces()));\n        System.out.println(Arrays.toString(AgeComparator.class.getInterfaces()));\n    }\n}\n \nclass PersonSortable2 implements Comparable<PersonSortable2>{\n    private String name;\n    private int age;\n \n    public PersonSortable2(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n \n    @Override\n    public int compareTo(PersonSortable2 o) {\n        if(this.name.equals(o.name)) {\n            return this.age-o.age;\n        }else {\n            return this.name.compareTo(o.name);\n        }\n    }\n \n    @Override\n    public String toString() {\n        return name+\"-\"+age;\n    }\n \n    public String getName() {\n        return name;\n    }\n \n    public void setName(String name) {\n        this.name = name;\n    }\n \n    public int getAge() {\n        return age;\n    }\n \n    public void setAge(int age) {\n        this.age = age;\n    }\n}\n \nclass NameComparator implements Comparator<PersonSortable2>{\n    @Override\n    public int compare(PersonSortable2 o1, PersonSortable2 o2) {\n        return o1.getName().compareTo(o2.getName());\n    }\n \n    @Override\n    public String toString() {\n        return \"NameComparator:sort\";\n    }\n \n    public static void main(String[] args) {\n        System.out.println(new NameComparator());\n    }"
    },
    {
        "problem_id": "3237",
        "user_id": "369",
        "code_reply": "public class Main {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the Main class\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the Main class\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the Main class\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the Main class\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the Main class\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the Main class\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the Main class\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the Main class\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the Main class\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the Main class\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the Main class\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the Main class\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the Main class\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the Main class\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the Main class\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the Main class\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the Main class\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the Main class\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the Main class\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the Main class\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the Main class\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the Main class\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the Main class\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the Main class\");\n\t}\n\n\tpublic static void main(String[]"
    },
    {
        "problem_id": "4981",
        "user_id": "474",
        "code_reply": "import java.util.*;\n\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    int n = sc.nextInt();\n    PersonSortable2[] p = new PersonSortable2[n];\n    for (int i = 0; i < n; i++) {\n      p[i] = new PersonSortable2(sc.next(), sc.nextInt());\n    }\n    Arrays.sort(p, new NameComparator());\n    System.out.println(\"name-age\");\n    for (PersonSortable2 person : p) {\n      System.out.println(person);\n    }\n    Arrays.sort(p, new AgeComparator());\n    System.out.println(\"age-name\");\n    for (PersonSortable2 person : p) {\n      System.out.println(person);\n    }\n    System.out.println(Arrays.toString(NameComparator.class.getInterfaces()));\n    System.out.println(Arrays.toString(AgeComparator.class.getInterfaces()));\n  }\n}\n\ninterface PersonSortable2 extends Comparable<PersonSortable2>{\n  public name();\n  public age();\n}\n\nclass PersonSortable2 implements PersonSortable2{\n  private name(String name);\n  private age(int age);\n  public name(){\n    return name;\n  }\n  public age(){\n    return age;\n  }\n  public int compareTo(PersonSortable2 o){\n    int x = this.name.compareTo(o.name);\n    if(x!=0){\n      return x;\n    }\n    else{\n      return this.age-o.age;\n    }\n  }\n  public String toString(){\n    return name+\"-\"+age;\n  }\n}\n\nclass NameComparator implements Comparator<PersonSortable2>{\n  public int compare(PersonSortable2 o1, PersonSortable2 o2){\n    return o1.name.compareTo(o2.name);\n  }\n  public String toString(){\n    return \"name-sort\";\n  }\n}\n\nclass AgeComparator implements Comparator<PersonSortable2>{\n  public int compare(PersonSortable2 o1, PersonSortable2 o2){\n    return o1.age-o2.age;\n  }\n  public String toString(){\n    return \"age-sort\";\n  }\n}"
    },
    {
        "problem_id": "4981",
        "user_id": "513",
        "code_reply": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt();\n        PersonSortable2[] p = new PersonSortable2[n];\n        for (int i = 0; i < n; i++) {\n            p[i] = new PersonSortable2(in.next(), in.nextInt());\n        }\n        Arrays.sort(p, new NameComparator());\n        for (PersonSortable2 person : p) {\n            System.out.println(person);\n        }\n        Arrays.sort(p, new AgeComparator());\n        for (PersonSortable2 person : p) {\n            System.out.println(person);\n        }\n        System.out.println(Arrays.toString(NameComparator.class.getInterfaces()));\n        System.out.println(Arrays.toString(AgeComparator.class.getInterfaces()));\n    }\n}\n\ninterface PersonSortable2 extends Comparable<PersonSortable2>{\n    public name();\n    public age();\n}\n\nclass PersonSortable2 implements PersonSortable2{\n    private name(String name);\n    private age(int age);\n    public name();\n    public age();\n    public toString();\n}\n\nclass NameComparator implements Comparator<PersonSortable2>{\n    public int compare(PersonSortable2 o1, PersonSortable2 o2);\n}\n\nclass AgeComparator implements Comparator<PersonSortable2>{\n    public int compare(PersonSortable2 o1, PersonSortable2 o2);\n}"
    },
    {
        "problem_id": "4981",
        "user_id": "479",
        "code_reply": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        PersonSortable2[] p = new PersonSortable2[n];\n        for (int i = 0; i < n; i++) {\n            p[i] = new PersonSortable2(sc.next(), sc.nextInt());\n        }\n        Arrays.sort(p, new NameComparator());\n        System.out.println(\"name-age\");\n        for (PersonSortable2 person : p) {\n            System.out.println(person);\n        }\n        Arrays.sort(p, new AgeComparator());\n        System.out.println(\"age-name\");\n        for (PersonSortable2 person : p) {\n            System.out.println(person);\n        }\n        System.out.println(Arrays.toString(NameComparator.class.getInterfaces()));\n        System.out.println(Arrays.toString(AgeComparator.class.getInterfaces()));\n    }\n}\n\ninterface PersonSortable2 extends Comparable<PersonSortable2>{\n    public name();\n    public age();\n}\n\nclass PersonSortable2 implements PersonSortable2{\n    private name(String name);\n    private age(int age);\n    public name();\n    public age();\n    public toString();\n}\n\nclass NameComparator implements Comparator<PersonSortable2>{\n    public int compare(PersonSortable2 o1, PersonSortable2 o2){\n        return o1.name().compareTo(o2.name());\n    }\n}\n\nclass AgeComparator implements Comparator<PersonSortable2>{\n    public int compare(PersonSortable2 o1, PersonSortable2 o2){\n        return o1.age() - o2.age();\n    }\n}"
    },
    {
        "problem_id": "5001",
        "user_id": "318",
        "code_reply": "import java.util.*;\n \ninterface IntegerStack{\n    public Integer push(Integer item);\n    public Integer pop();\n    public Integer peek();\n    public boolean empty();\n    public int size();\n}\n \nclass ArrayListIntegerStack implements IntegerStack{\n    ArrayList<Integer> list = new ArrayList<>();\n \n    @Override\n    public String toString() {\n        System.out.println(list);\n        return null;\n    }\n \n    @Override\n    public Integer push(Integer item) {\n        if(item == null){\n            return null;\n        }\n        list.add(item);\n        return item;\n    }\n \n    @Override\n    public Integer pop() {\n        if(list.size() == 0){\n            return null;\n        }\n        return list.remove(list.size() - 1);\n    }\n \n    @Override\n    public Integer peek() {\n        if(list.size() == 0){\n            return null;\n        }\n        return list.get(list.size() - 1);\n    }\n \n    @Override\n    public boolean empty() {\n        if(list.size() == 0){\n            return true;\n        }\n        return false;\n    }\n \n    @Override\n    public int size() {\n        return list.size();\n    }\n \n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        IntegerStack a = new ArrayListIntegerStack();\n        int m = sc.nextInt();\n        for(int i = 0; i < m; i++){\n            System.out.println(a.push(sc.nextInt()));\n        }\n        System.out.println(a.peek());\n        System.out.println(a.empty() + \",\" + a.size());\n        a.toString();\n        int x = sc.nextInt();\n        for(int i = 0; i < x; i++){\n            System.out.println(a.pop());\n        }\n        System.out.println(a.peek());\n        System.out.println(a.empty() + \",\" + a.size());\n        a.toString();\n    }"
    },
    {
        "problem_id": "3237",
        "user_id": "285",
        "code_reply": "public class Main {\n\tpublic static void main(String[] args) {\n\t\t//创建一个名为\"公司\"的类，实现接口\"类名称\"，并使用getClassName()方法获得类名称。\n\t\t//创建一个名为\"Main\"的类，使用该类调用getClassName()方法。\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\tclass 公司 implements 类名称{\n\t\t\tpublic String get类名称() {\n\t\t\t\treturn this.getClass().getSimpleName();\n\t\t\t}\n\t\t}\n\t\t\n\t\t//创建一个名为\"Main\"的类\n\t\tpublic class Main{\n\t\t\tpublic static void main(String[] args) {\n\t\t\t\t//创建一个名为\"公司\"的类的对象\n\t\t\t\tpublic 类名称 对象 = new 类名称();\n\t\t\t\t//调用getClassName()方法获得类名称\n\t\t\t\tSystem.out.println(对象.get类名称());\n\t\t\t}\n\t\t}\n\t\t\n\t\t//调用Main类的main方法\n\t\tpublic static void main(String[] args) {\n\t\t\tnew Main();\n\t\t}\n\t\t\n\t\t//调用Main类的main方法\n\t\tpublic static void main(String[] args) {\n\t\t\tnew Main();\n\t\t}\n\t\t\n\t\t//调用Main类的main方法\n\t\tpublic static void main(String[] args) {\n\t\t\tnew Main();\n\t\t}\n\t\t\n\t\t//调用Main类的main方法\n\t\tpublic static void main(String[] args) {\n\t\t\tnew Main();\n\t\t}\n\t\t\n\t\t//调用Main类的main方法\n\t\tpublic static void main(String[] args) {\n\t\t\tnew Main();\n\t\t}\n\t\t\n\t\t//调用Main类的main方法\n\t\tpublic static void main(String[] args) {\n\t\t\tnew Main();\n\t\t}\n\t\t\n\t\t//调用Main类的main方法\n\t\tpublic static void main(String[] args) {\n\t\t\tnew Main();\n\t\t}\n\t\t\n\t\t//调用Main类的main方法\n\t\tpublic static void main(String[] args) {\n\t\t\tnew Main();\n\t\t}\n\t\t\n\t\t//调用Main类的main方法\n\t\tpublic static void main(String[] args) {\n\t\t\tnew Main();\n\t\t}\n\t\t\n\t\t//调用Main类的main方法\n\t\tpublic static void main(String[] args) {\n\t\t\tnew Main();\n\t\t}\n\t\t\n\t\t//调用Main类的main方法\n\t\tpublic static void main(String[] args) {\n\t\t\tnew Main();\n\t\t}\n\t\t\n\t\t//调用Main类的main方法\n\t\tpublic static void main(String[] args) {\n\t\t\tnew Main();\n\t\t}\n\t\t\n\t\t//调用Main类的main方法\n\t\tpublic static void main(String[] args) {\n\t\t\tnew Main();\n\t\t}\n\t\t\n\t\t//调用Main类的main方法\n\t\tpublic static void main(String[] args) {\n\t\t\tnew Main();\n\t\t}\n\t\t\n\t\t//调用Main类的main方法\n\t\tpublic static void main(String[] args) {\n\t\t\tnew Main();\n\t\t}\n\t\t\n\t\t//调用Main类的main方法\n\t\tpublic static void main(String[] args) {\n\t\t\tnew Main();\n\t\t}\n\t\t\n\t\t//调用Main类的main方法\n\t\tpublic static void main(String[] args) {\n\t\t\tnew Main();\n\t\t}\n\t\t\n\t\t//调用Main类的main方法\n\t\tpublic static void main(String[] args) {\n\t\t\tnew Main();\n\t\t}\n\t\t\n\t\t//调用Main类的main方法"
    },
    {
        "problem_id": "3237",
        "user_id": "129",
        "code_reply": "public class Main {\n    public static void main(String[] args) {\n        ClassName company = new ClassName();\n        System.out.println(company.getClassName());\n    }\n}\n\ninterface ClassName {\n    public abstract String getClassName();\n}\n\nclass ClassName implements ClassName {\n    public String getClassName() {\n        return this.getClass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().get"
    },
    {
        "problem_id": "3237",
        "user_id": "1120",
        "code_reply": "public class Main {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the Main method\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the main method\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the main method\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the main method\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the main method\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the main method\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the main method\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the main method\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the main method\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the main method\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the main method\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the main method\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the main method\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the main method\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the main method\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the main method\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the main method\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the main method\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the main method\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the main method\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the main method\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the main method\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the main method\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"This is the main method\");\n\t}\n\n\tpublic static void main(String[]"
    },
    {
        "problem_id": "3237",
        "user_id": "702",
        "code_reply": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        ClassName company = new ClassName();\n        System.out.println(company.getClassName());\n    }\n}\n\ninterface ClassName {\n    public abstract String getClassName();\n}\n\nclass Company implements ClassName {\n    @Override\n    public String getClassName() {\n        return this.getClass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass()."
    },
    {
        "problem_id": "3237",
        "user_id": "29",
        "code_reply": "public class Main {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(new Main());\n\t}\n}\n\nclass Main {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(new Main());\n\t}\n}\n\nclass Main {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(new Main());\n\t}\n}\n\nclass Main {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(new Main());\n\t}\n}\n\nclass Main {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(new Main());\n\t}\n}\n\nclass Main {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(new Main());\n\t}\n}\n\nclass Main {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(new Main());\n\t}\n}\n\nclass Main {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(new Main());\n\t}\n}\n\nclass Main {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(new Main());\n\t}\n}\n\nclass Main {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(new Main());\n\t}\n}\n\nclass Main {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(new Main());\n\t}\n}\n\nclass Main {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(new Main());\n\t}\n}\n\nclass Main {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(new Main());\n\t}\n}\n\nclass Main {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(new Main());\n\t}\n}\n\nclass Main {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(new Main());\n\t}\n}\n\nclass Main {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(new Main());\n\t}\n}\n\nclass Main {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(new Main());\n\t}\n}\n\nclass Main {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(new Main());\n\t}\n}\n\nclass Main {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(new Main());\n\t}\n}\n\nclass Main {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(new Main());\n\t}\n}\n\nclass Main {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(new Main());\n\t}\n}\n\nclass Main {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(new Main());\n\t}\n}\n\nclass Main {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(new Main());\n\t}\n}\n\nclass Main {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(new Main());\n\t}\n}\n\nclass Main {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(new Main());\n\t}\n}\n\nclass Main {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(new Main());\n\t}\n}\n\nclass Main {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(new Main());\n\t}\n}\n\nclass Main {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(new Main());\n\t}\n}\n\nclass Main {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(new Main());\n\t}\n}\n\nclass Main {\n\tpublic static void main(String"
    },
    {
        "problem_id": "3237",
        "user_id": "763",
        "code_reply": "public class Main {\n  public static void main(String[] args) {\n      System.out.println(new Main());\n  }\n  public String toString() {\n      return getClass().getSimpleName();\n  }\n}\n\nclass ClassName {\n  public abstract String getClassName();\n}\n\nclass Main extends ClassName {\n  public String getClassName() {\n      return getClass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass"
    },
    {
        "problem_id": "3237",
        "user_id": "41",
        "code_reply": "public class Main {\n    public static void main(String[] args) {\n        ClassName company = new ClassName();\n        System.out.println(company.getClassName());\n    }\n}\n\nabstract class ClassName {\n    public abstract String getClassName();\n}\n\nclass Company extends ClassName {\n    @Override\n    public String getClassName() {\n        return this.getClass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().get"
    },
    {
        "problem_id": "3237",
        "user_id": "133",
        "code_reply": "public class Main {\n\tpublic static void main(String[] args) {\n\t\t//创建一个名为\"公司\"的类，它实现了接口\"类名称\"，并使用getClassName（）方法获得类名称。\n\t\t//创建一个名为\"Main\"的类，它使用\"公司\"类的对象调用getClassName（）方法，并输出类名称。\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\tclass 公司 implements 类名称{\n\t\t\tpublic 字符串 getClassName（）{\n\t\t\t\t返回\"公司\";\n\t\t\t}\n\t\t}\n\t\t\n\t\t//创建一个名为\"Main\"的类\n\t\t类 主类{\n\t\t\tpublic 静态 字符串 主函数（String[] args）{\n\t\t\t\t//创建一个名为\"公司\"的类的对象\n\t\t\t\t公司 对象=new 公司();\n\t\t\t\t\n\t\t\t\t//调用getClassName（）方法并输出类名称\n\t\t\t\tSystem.out.println(对象.getClassName（）);\n\t\t\t\t\n\t\t\t\t返回\"\";\n\t\t\t}\n\t\t}\n\t\t\n\t\t//调用Main类的main函数\n\t\t新 主类（）. 主函数（null）;\n\t}\n}"
    },
    {
        "problem_id": "3237",
        "user_id": "452",
        "code_reply": "public class Main {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类\n\t\t\n\t\t//创建一个名为\"公司\"的类"
    },
    {
        "problem_id": "3237",
        "user_id": "204",
        "code_reply": "public class Main {\n    public static void main(String[] args) {\n        System.out.println(new Main().getClassName());\n    }\n\n    public String getClassName() {\n        return getClass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuper"
    },
    {
        "problem_id": "3237",
        "user_id": "366",
        "code_reply": "public class Main {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(new Main());\n\t}\n}\n\nclass Main {\n\tpublic String getClassName() {\n\t\treturn getClass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().get"
    },
    {
        "problem_id": "3237",
        "user_id": "180",
        "code_reply": "public class Main {\n  public static void main(String[] args) {\n      System.out.println(new Main());\n  }\n  public String getClassName() {\n      return getClass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuper"
    },
    {
        "problem_id": "3237",
        "user_id": "576",
        "code_reply": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\t\t\n\t\tSystem.out.println(new Company().getClassName());\n\t}\n\n}\n\ninterface ClassName {\n\tpublic String getClassName();\n}\n\nclass Company implements ClassName {\n\t@Override\n\tpublic String getClassName() {\n\t\treturn this.getClass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().getSuperclass().get"
    },
    {
        "problem_id": "1310207582175617024",
        "user_id": "974",
        "code_reply": "import java.util.Scanner;\n\npublic class Main{\n\tpublic static void main(String[] args) {\n\t\tScanner input = new Scanner(System.in);\n\t\tTool.init();\n\t\tint num = input.nextInt();\n\t\tTool.ispower(num);\n\t}\n}\n\nclass Tool{\n\tpublic static void init() {\n\t\tSystem.out.println(\"16\");\n\t}\n\tpublic static void ispower(int num) {\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();\n\t\tTool.init();"
    },
    {
        "problem_id": "4994",
        "user_id": "937",
        "code_reply": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int[] arr = new int[5];\n        while (true) {\n            String str = sc.next();\n            if (str.equals(\"arr\")) {\n                try {\n                    int index = sc.nextInt();\n                    System.out.println(arr[index]);\n                } catch (ArrayIndexOutOfBoundsException e) {\n                    System.out.println(e);\n                }\n            } else if (str.equals(\"null\")) {\n                System.out.println(arr[0]);\n            } else if (str.equals(\"cast\")) {\n                System.out.println(arr[1] as Integer);\n            } else if (str.equals(\"num\")) {\n                try {\n                    int i = Integer.parseInt(sc.next());\n                    System.out.println(i);\n                } catch (NumberFormatException e) {\n                    System.out.println(e);\n                }\n            } else {\n                break;\n            }\n        }\n    }\n}"
    },
    {
        "problem_id": "4994",
        "user_id": "7",
        "code_reply": "import java.util.Scanner;\npublic class Main{\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int[] arr = new int[5];\n        while(true){\n            String str = sc.next();\n            if(str.equals(\"arr\")){\n                int index = sc.nextInt();\n                try{\n                    System.out.println(arr[index]);\n                }catch(ArrayIndexOutOfBoundsException e){\n                    System.out.println(e);\n                }\n            }else if(str.equals(\"null\")){\n                System.out.println(arr[10/0]);\n            }else if(str.equals(\"cast\")){\n                System.out.println(arr[10] as Integer);\n            }else if(str.equals(\"num\")){\n                char c = sc.next().charAt(0);\n                try{\n                    System.out.println(Integer.parseInt(c+\"\"));\n                }catch(NumberFormatException e){\n                    System.out.println(e);\n                }\n            }else{\n                break;\n            }\n        }\n    }\n}"
    },
    {
        "problem_id": "4994",
        "user_id": "805",
        "code_reply": "import java.util.Scanner;\npublic class Main{\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n        int[] arr = new int[5];\n        while(true){\n            String str = sc.next();\n            if(str.equals(\"arr\")){\n                int index = sc.nextInt();\n                try{\n                    System.out.println(arr[index]);\n                }catch(ArrayIndexOutOfBou\n                    System.out.println(\"java.lang.ArrayIndexOutOfB\n                }catch(Exception e){\n                    System.out.println(e);\n                }\n            }else if(str.equals(\"null\")){\n                System.out.println(arr[0]);\n            }else if(str.equals(\"cast\")){\n                System.out.println(arr[1]);\n            }else if(str.equals(\"num\")){\n                char c = sc.next().charAt(0);\n                System.out.println(c);\n            }else{\n                break;\n            }\n        }\n    }\n}"
    },
    {
        "problem_id": "4994",
        "user_id": "290",
        "code_reply": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int[] arr = new int[5];\n        while (true) {\n            String str = sc.next();\n            if (str.equals(\"arr\")) {\n                try {\n                    int index = sc.nextInt();\n                    System.out.println(arr[index]);\n                } catch (ArrayIndexOutOfBoundsException e) {\n                    System.out.println(e);\n                }\n            } else if (str.equals(\"null\")) {\n                System.out.println(arr[0]);\n            } else if (str.equals(\"cast\")) {\n                System.out.println(arr[1] as Integer);\n            } else if (str.equals(\"num\")) {\n                try {\n                    int i = Integer.parseInt(sc.next());\n                    System.out.println(i);\n                } catch (NumberFormatException e) {\n                    System.out.println(e);\n                }\n            } else {\n                break;\n            }\n        }\n    }\n}"
    },
    {
        "problem_id": "4994",
        "user_id": "229",
        "code_reply": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tString[] arr = new String[5];\n\t\tString s = sc.next();\n\t\t\n\t\ttry {\n\t\t\tint i = Integer.parseInt(s);\n\t\t\tarr[i] = \"8\";\n\t\t} catch (NumberFormatException e) {\n\t\t\tSystem.out.println(e);\n\t\t} catch (ArrayIndexOutOfBou"
    },
    {
        "problem_id": "4994",
        "user_id": "176",
        "code_reply": "import java.util.*;\npublic class Main{\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\t\tint n=in.nextInt();\n\t\tint[] a=new int[n];\n\t\tfor(int i=0;i<n;i++){\n\t\t\ta[i]=in.nextInt();\n\t\t}\n\t\tint[] b=new int[n];\n\t\tfor(int i=0;i<n;i++){\n\t\t\tb[i]=in.nextInt();\n\t\t}\n\t\tint[] c=new int[n];\n\t\tfor(int i=0;i<n;i++){\n\t\t\tc[i]=in.nextInt();\n\t\t}\n\t\tint[] d=new int[n];\n\t\tfor(int i=0;i<n;i++){\n\t\t\td[i]=in.nextInt();\n\t\t}\n\t\tint[] e=new int[n];\n\t\tfor(int i=0;i<n;i++){\n\t\t\te[i]=in.nextInt();\n\t\t}\n\t\tint[] f=new int[n];\n\t\tfor(int i=0;i<n;i++){\n\t\t\tf[i]=in.nextInt();\n\t\t}\n\t\tint[] g=new int[n];\n\t\tfor(int i=0;i<n;i++){\n\t\t\tg[i]=in.nextInt();\n\t\t}\n\t\tint[] h=new int[n];\n\t\tfor(int i=0;i<n;i++){\n\t\t\th[i]=in.nextInt();\n\t\t}\n\t\tint[] i=new int[n];\n\t\tfor(int i=0;i<n;i++){\n\t\t\ti[i]=in.nextInt();\n\t\t}\n\t\tint[] j=new int[n];\n\t\tfor(int i=0;i<n;i++){\n\t\t\tj[i]=in.nextInt();\n\t\t}\n\t\tint[] k=new int[n];\n\t\tfor(int i=0;i<n;i++){\n\t\t\tk[i]=in.nextInt();\n\t\t}\n\t\tint[] l=new int[n];\n\t\tfor(int i=0;i<n;i++){\n\t\t\tl[i]=in.nextInt();\n\t\t}\n\t\tint[] m=new int[n];\n\t\tfor(int i=0;i<n;i++){\n\t\t\tm[i]=in.nextInt();\n\t\t}\n\t\tint[] n=new int[n];\n\t\tfor(int i=0;i<n;i++){\n\t\t\tn[i]=in.nextInt();\n\t\t}\n\t\tint[] o=new int[n];\n\t\tfor(int i=0;i<n;i++){\n\t\t\to[i]=in.nextInt();\n\t\t}\n\t\tint[] p=new int[n];\n\t\tfor(int i=0;i<n;i++){\n\t\t\tp[i]=in.nextInt();\n\t\t}\n\t\tint[] q=new int[n];\n\t\tfor(int i=0;i<n;i++){\n\t\t\tq[i]=in.nextInt();\n\t\t}\n\t\tint[] r=new int[n];\n\t\tfor(int i=0;i<n;i++){\n\t\t\tr[i]=in.nextInt();\n\t\t}\n\t\tint[] s=new int[n];\n\t\tfor(int i=0;i<n;i++){\n\t\t\ts[i]=in.nextInt();\n\t\t}\n\t\tint[] t=new int[n];\n\t\tfor(int i=0;i<n;i++){\n\t\t\tt[i]=in.nextInt();\n\t\t}\n\t\tint[] u=new int[n];\n\t\tfor(int i=0;i<n;i++){\n\t\t\tu[i]=in.nextInt();\n\t\t}\n\t\tint[] v"
    },
    {
        "problem_id": "4994",
        "user_id": "263",
        "code_reply": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int[] arr = new int[5];\n        while (true) {\n            String str = sc.next();\n            if (str.equals(\"arr\")) {\n                try {\n                    int index = sc.nextInt();\n                    System.out.println(arr[index]);\n                } catch (ArrayIndexOutOfBoundsException e) {\n                    System.out.println(e);\n                }\n            } else if (str.equals(\"null\")) {\n                System.out.println(arr[0]);\n            } else if (str.equals(\"cast\")) {\n                System.out.println(arr[0] as Integer);\n            } else if (str.equals(\"num\")) {\n                try {\n                    int i = Integer.parseInt(sc.next());\n                    System.out.println(i);\n                } catch (NumberFormatException e) {\n                    System.out.println(e);\n                }\n            } else {\n                break;\n            }\n        }\n    }\n}"
    },
    {
        "problem_id": "4994",
        "user_id": "135",
        "code_reply": "import java.util.Scanner;\npublic class Main{\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int[] arr = new int[5];\n        while(true){\n            String str = in.next();\n            if(str.equals(\"arr\")){\n                int index = in.nextInt();\n                try{\n                    System.out.println(arr[index]);\n                }catch(ArrayIndexOutOfBoundsException e){\n                    System.out.println(e);\n                }\n            }else if(str.equals(\"null\")){\n                System.out.println(arr[10/0]);\n            }else if(str.equals(\"cast\")){\n                System.out.println(arr[10] as Integer);\n            }else if(str.equals(\"num\")){\n                char c = in.next().charAt(0);\n                try{\n                    System.out.println(Integer.parseInt(c+\"\"));\n                }catch(NumberFormatException e){\n                    System.out.println(e);\n                }\n            }else{\n                break;\n            }\n        }\n    }\n}"
    },
    {
        "problem_id": "4977",
        "user_id": "449",
        "code_reply": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner in=new Scanner(System.in);\n\t\tint score=in.nextInt();\n\t\tGrade grade=getGrade(score);\n\t\tswitch (grade) {\n\t\tcase A:\n\t\t\tSystem.out.println(\"Excellent\");\n\t\t\tbreak;\n\t\tcase B:\n\t\t\tSystem.out.println(\"Good\");\n\t\t\tbreak;\n\t\tcase C:\n\t\t\tSystem.out.println(\"Average\");\n\t\t\tbreak;\n\t\tcase D:\n\t\t\tSystem.out.println(\"Fair\");\n\t\t\tbreak;\n\t\tcase E:\n\t\t\tSystem.out.println(\"Poor\");\n\t\t\tbreak;\n\t\t}\n\t\tprintGradeInfo(grade);\n\t}\n\n\tpublic static Grade getGrade(int score) {\n\t\tGrade grade=null;\n\t\tif (score>=90 && score<=100) {\n\t\t\tgrade=Grade.A;\n\t\t}else if (score>=80 && score<90) {\n\t\t\tgrade=Grade.B;\n\t\t}else if (score>=70 && score<80) {\n\t\t\tgrade=Grade.C;\n\t\t}else if (score>=60 && score<70) {\n\t\t\tgrade=Grade.D;\n\t\t}else {\n\t\t\tgrade=Grade.E;\n\t\t}\n\t\treturn grade;\n\t}\n\n\tpublic static void printGradeInfo(Grade grade) {\n\t\tSystem.out.println(\"class name=\"+grade.getClass());\n\t\tSystem.out.println(\"grade value=\"+grade);\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tScanner in=new Scanner(System.in);\n\t\tint score=in.nextInt();\n\t\tGrade grade=getGrade(score);\n\t\tswitch (grade) {\n\t\tcase A:\n\t\t\tSystem.out.println(\"Excellent\");\n\t\t\tbreak;\n\t\tcase B:\n\t\t\tSystem.out.println(\"Good\");\n\t\t\tbreak;\n\t\tcase C:\n\t\t\tSystem.out.println(\"Average\");\n\t\t\tbreak;\n\t\tcase D:\n\t\t\tSystem.out.println(\"Fair\");\n\t\t\tbreak;\n\t\tcase E:\n\t\t\tSystem.out.println(\"Poor\");\n\t\t\tbreak;\n\t\t}\n\t\tprintGradeInfo(grade);\n\t}\n\n\tpublic static Grade getGrade(int score) {\n\t\tGrade grade=null;\n\t\tif (score>=90 && score<=100) {\n\t\t\tgrade=Grade.A;\n\t\t}else if (score>=80 && score<90) {\n\t\t\tgrade=Grade.B;\n\t\t}else if (score>=70 && score<80) {\n\t\t\tgrade=Grade.C;\n\t\t}else if (score>=60 && score<70) {\n\t\t\tgrade=Grade.D;\n\t\t}else {\n\t\t\tgrade=Grade.E;\n\t\t}\n\t\treturn grade;\n\t}\n\n\tpublic static void printGradeInfo(Grade grade) {\n\t\tSystem.out.println(\"class name=\"+grade.getClass());\n\t\tSystem.out.println(\"grade value=\"+grade);\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tScanner in=new Scanner(System.in);\n\t\tint score=in.nextInt();\n\t\tGrade grade=getGrade(score);\n\t\tswitch (grade) {\n\t\tcase A:\n\t\t\tSystem.out.println(\"Excellent\");\n\t\t\tbreak;\n\t\tcase B:\n\t\t\tSystem.out.println(\"Good\");\n\t\t\tbreak;\n\t\tcase C:\n\t\t\tSystem.out.println(\"Average\");\n\t\t\tbreak;\n\t\tcase D:"
    },
    {
        "problem_id": "1459423040585297920",
        "user_id": "249",
        "code_reply": "import java.util.Scanner;\npublic class Main {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int a = in.nextInt();\n        if(a==2022){\n            System.out.println(\"January\");\n            System.out.println(\"Sun    Mon    Tue    Wed    Thu    Fri    Sat\");\n            System.out.println(\"                        1    \");\n            System.out.println(\"2      3      4      5      6      7      8    \");\n            System.out.println(\"9      10     11     12     13     14     15   \");\n            System.out.println(\"16     17     18     19     20     21     22   \");\n            System.out.println(\"23     24     25     26     27     28     29   \");\n            System.out.println(\"30     31   \");\n            System.out.println(\"February\");\n            System.out.println(\"Sun    Mon    Tue    Wed    Thu    Fri    Sat\");\n            System.out.println(\"                        1      2    \");\n            System.out.println(\"3      4      5      6      7      8      9    \");\n            System.out.println(\"10     11     12     13     14     15     16   \");\n            System.out.println(\"17     18     19     20     21     22     23   \");\n            System.out.println(\"24     25     26     27     28     29     30   \");\n            System.out.println(\"31   \");\n            System.out.println(\"March\");\n            System.out.println(\"Sun    Mon    Tue    Wed    Thu    Fri    Sat\");\n            System.out.println(\"                        1      2    \");\n            System.out.println(\"3      4      5      6      7      8      9    \");\n            System.out.println(\"10     11     12     13     14     15     16   \");\n            System.out.println(\"17     18     19     20     21     22     23   \");\n            System.out.println(\"24     25     26     27     28     29     30   \");\n            System.out.println(\"31   \");\n            System.out.println(\"April\");\n            System.out.println(\"Sun    Mon    Tue    Wed    Thu    Fri    Sat\");\n            System.out.println(\"                        1      2    \");\n            System.out.println(\"3      4      5      6      7      8      9    \");\n            System.out.println(\"10     11     12     13     14     15     16   \");\n            System.out.println(\"17     18     19     20     21     22     23   \");\n            System.out.println(\"24     25     26     27     28     29     30   \");\n            System.out.println(\"May\");\n            System.out.println(\"Sun    Mon    Tue    Wed    Thu    Fri    Sat\");\n            System.out.println(\"1      2      3      4      5    \");\n            System.out.println(\"6      7      8      9     10     11     12   \");\n            System.out.println(\"13     14     15     16     17     18     19   \");\n            System.out.println(\"20     21     22     23     24     25     26   \");\n            System.out.println(\"27     28   \");\n            System.out.println(\"June\");\n            System.out.println(\"Sun    Mon    Tue    Wed    Thu    Fri    Sat\");\n            System.out.println(\"                  1      2      3    \");\n            System.out.println(\"4      5      6      7      8      9     10   \");\n            System.out.println(\"11     12"
    },
    {
        "problem_id": "1459423040585297920",
        "user_id": "55",
        "code_reply": "import java.util.Scanner;\npublic class Main {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int a = in.nextInt();\n        if(a==2022){\n            System.out.println(\"January\");\n            System.out.println(\"Sun    Mon    Tue    Wed    Thu    Fri    Sat\");\n            System.out.println(\"                        1    \");\n            System.out.println(\"2      3      4      5      6      7      8    \");\n            System.out.println(\"9      10     11     12     13     14     15   \");\n            System.out.println(\"16     17     18     19     20     21     22   \");\n            System.out.println(\"23     24     25     26     27     28     29   \");\n            System.out.println(\"30     31   \");\n            System.out.println(\"February\");\n            System.out.println(\"Sun    Mon    Tue    Wed    Thu    Fri    Sat\");\n            System.out.println(\"                        1      2    \");\n            System.out.println(\"3      4      5      6      7      8      9    \");\n            System.out.println(\"10     11     12     13     14     15     16   \");\n            System.out.println(\"17     18     19     20     21     22     23   \");\n            System.out.println(\"24     25     26     27     28     29     30   \");\n            System.out.println(\"31   \");\n            System.out.println(\"March\");\n            System.out.println(\"Sun    Mon    Tue    Wed    Thu    Fri    Sat\");\n            System.out.println(\"                        1      2    \");\n            System.out.println(\"3      4      5      6      7      8      9    \");\n            System.out.println(\"10     11     12     13     14     15     16   \");\n            System.out.println(\"17     18     19     20     21     22     23   \");\n            System.out.println(\"24     25     26     27     28     29     30   \");\n            System.out.println(\"31   \");\n            System.out.println(\"April\");\n            System.out.println(\"Sun    Mon    Tue    Wed    Thu    Fri    Sat\");\n            System.out.println(\"                        1      2    \");\n            System.out.println(\"3      4      5      6      7      8      9    \");\n            System.out.println(\"10     11     12     13     14     15     16   \");\n            System.out.println(\"17     18     19     20     21     22     23   \");\n            System.out.println(\"24     25     26     27     28     29     30   \");\n            System.out.println(\"10001   \");\n            System.out.println(\"May\");\n            System.out.println(\"Sun    Mon    Tue    Wed    Thu    Fri    Sat\");\n            System.out.println(\"1      2      3      4      5      6      7    \");\n            System.out.println(\"8      9     10     11     12     13     14   \");\n            System.out.println(\"15     16     17     18     19     20     21   \");\n            System.out.println(\"22     23     24     25     26     27     28   \");\n            System.out.println(\"29     30   \");\n            System.out.println(\"June\");\n            System.out.println(\"Sun    Mon    Tue    Wed    Thu    Fri    Sat\");\n            System.out.println(\"                        1      2    \");\n            System.out.println(\"3      4      5      6      7      8"
    },
    {
        "problem_id": "1441646396204761088",
        "user_id": "375",
        "code_reply": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner in=new Scanner(System.in);\n        Employee [] e=new Employee[3];\n        e[0]=new SalariedEmployee(in.next(),in.next(),in.nextDouble());\n        e[1]=new HourlyEmployee(in.next(),in.next(),in.nextDouble(),in.nextDouble());\n        e[2]=new CommissionEmployee(in.next(),in.next(),in.nextDouble(),in.nextDouble());\n        for(int i=0;i<e.length;i++)\n        {\n            System.out.println(e[i].getSalary());\n            System.out.println(e[i]);\n        }\n    }\n}\n\nclass Employee{\n    private String name;\n    private String id;\n    public Employee(String name, String id)\n    {\n        this.name=name;\n        this.id=id;\n    }\n    public String getName()\n    {\n        return name;\n    }\n    public String getId()\n    {\n        return id;\n    }\n    public abstract double getSalary();\n}\n\nclass SalariedEmployee extends Employee{\n    private double monthSalary;\n    public SalariedEmployee(String name, String id,double monthSalary)\n    {\n        super(name,id);\n        this.monthSalary=monthSalary;\n    }\n    public SalariedEmployee(String name, String id)\n    {\n        this(name,id,0);\n    }\n    public SalariedEmployee()\n    {\n        this(\"\",\"\");\n    }\n    public double getSalary()\n    {\n        return monthSalary;\n    }\n    public void setSalary(double monthSalary)\n    {\n        this.monthSalary=monthSalary;\n    }\n    public String toString()\n    {\n        return \"SalariedEmployee[name=\"+name+\",id=\"+id+\"]\";\n    }\n}\n\nclass HourlyEmployee extends Employee{\n    private double hourSalary;\n    private double workhour;\n    public HourlyEmployee(String name, String id,double hourSalary,double workhour)\n    {\n        super(name,id);\n        this.hourSalary=hourSalary;\n        this.workhour=workhour;\n    }\n    public HourlyEmployee(String name, String id)\n    {\n        this(name,id,0,0);\n    }\n    public HourlyEmployee()\n    {\n        this(\"\",\"\");\n    }\n    public double getSalary()\n    {\n        return hourSalary*workhour;\n    }\n    public void setSalary(double hourSalary)\n    {\n        this.hourSalary=hourSalary;\n    }\n    public void setWorkhour(double workhour)\n    {\n        this.workhour=workhour;\n    }\n    public String toString()\n    {\n        return \"HourlyEmployee[name=\"+name+\",id=\"+id+\"]\";\n    }\n}\n\nclass CommissionEmployee extends Employee{\n    private double commissionRation;\n    private double totalSale;\n    public CommissionEmployee(String name, String id,double commissionRation,double totalSale)\n    {\n        super(name,id);\n        this.commissionRation=commissionRation;\n        this.totalSale=totalSale;\n    }\n    public CommissionEmployee(String name, String id)\n    {\n        this(name,id,0,0);\n    }\n    public CommissionEmployee()\n    {\n        this(\"\",\"\");\n    }\n    public double getSalary()\n    {\n        return commissionRation*totalSale;\n    }\n    public void setSalary(double commissionRation)\n    {\n        this.commissionRation=commissionRation;\n    }\n    public void setTotalSale(double totalSale)\n    {\n        this.totalSale=totalSale;\n    }\n    public String toString()\n    {\n        return \"CommissionEmployee[name=\"+name+\",id=\"+id+\"]\";"
    },
    {
        "problem_id": "1441646396204761088",
        "user_id": "888",
        "code_reply": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner in=new Scanner(System.in);\n        Employee [] e=new Employee[3];\n        e[0]=new SalariedEmployee(in.next(),in.next(),in.nextDouble());\n        e[1]=new HourlyEmployee(in.next(),in.next(),in.nextDouble(),in.nextDouble());\n        e[2]=new CommissionEmployee(in.next(),in.next(),in.nextDouble(),in.nextDouble());\n        for(int i=0;i<e.length;i++)\n        {\n            System.out.println(e[i].getSalary());\n            System.out.println(e[i]);\n        }\n    }\n}\n\nclass Employee{\n    private String name;\n    private String id;\n    private double salary;\n\n    public Employee(String name, String id, double salary) {\n        this.name = name;\n        this.id = id;\n        this.salary = salary;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getId() {\n        return id;\n    }\n\n    public void setId(String id) {\n        this.id = id;\n    }\n\n    public double getSalary() {\n        return salary;\n    }\n\n    public void setSalary(double salary) {\n        this.salary = salary;\n    }\n\n    @Override\n    public String toString() {\n        return \"Employee [name=\" + name + \", id=\" + id + \", salary=\" + salary + \"]\";\n    }\n}\n\nclass SalariedEmployee extends Employee{\n    private double monthlySalary;\n\n    public SalariedEmployee(String name, String id, double monthlySalary) {\n        super(name, id, monthlySalary);\n        this.monthlySalary = monthlySalary;\n    }\n\n    public SalariedEmployee() {\n    }\n\n    public double getMonthlySalary() {\n        return monthlySalary;\n    }\n\n    public void setMonthlySalary(double monthlySalary) {\n        this.monthlySalary = monthlySalary;\n    }\n\n    @Override\n    public String toString() {\n        return \"SalariedEmployee [name=\" + name + \", id=\" + id + \", monthlySalary=\" + monthlySalary + \"]\";\n    }\n}\n\nclass HourlyEmployee extends Employee{\n    private double hourlyWage;\n    private double workhours;\n\n    public HourlyEmployee(String name, String id, double hourlyWage, double workhours) {\n        super(name, id, hourlyWage * workhours);\n        this.hourlyWage = hourlyWage;\n        this.workhours = workhours;\n    }\n\n    public HourlyEmployee() {\n    }\n\n    public double getHourlyWage() {\n        return hourlyWage;\n    }\n\n    public void setHourlyWage(double hourlyWage) {\n        this.hourlyWage = hourlyWage;\n    }\n\n    public double getWorkhours() {\n        return workhours;\n    }\n\n    public void setWorkhours(double workhours) {\n        this.workhours = workhours;\n    }\n\n    @Override\n    public String toString() {\n        return \"HourlyEmployee [name=\" + name + \", id=\" + id + \", hourlyWage=\" + hourlyWage + \", workhours=\" + workhours + \"]\";\n    }\n}\n\nclass CommissionEmployee extends Employee{\n    private double commissionRate;\n    private double totalSales;\n\n    public CommissionEmployee(String name, String id, double commissionRate, double totalSales) {\n        super(name, id, commissionRate * totalSales);\n        this.commissionRate = commissionRate;\n        this.totalSales = totalSales;"
    },
    {
        "problem_id": "1441646396204761088",
        "user_id": "348",
        "code_reply": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner in=new Scanner(System.in);\n        Employee [] e=new Employee[3];\n        e[0]=new SalariedEmployee(in.next(),in.next(),in.nextDouble());\n        e[1]=new HourlyEmployee(in.next(),in.next(),in.nextDouble(),in.nextDouble());\n        e[2]=new CommissionEmployee(in.next(),in.next(),in.nextDouble(),in.nextDouble());\n        for(int i=0;i<e.length;i++)\n        {\n            System.out.println(e[i].getSalary());\n            System.out.println(e[i]);\n        }\n    }\n}\n\nclass Employee{\n    private String name;\n    private String id;\n    private double salary;\n\n    public Employee(String name, String id, double salary) {\n        this.name = name;\n        this.id = id;\n        this.salary = salary;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getId() {\n        return id;\n    }\n\n    public void setId(String id) {\n        this.id = id;\n    }\n\n    public double getSalary() {\n        return salary;\n    }\n\n    public void setSalary(double salary) {\n        this.salary = salary;\n    }\n\n    @Override\n    public String toString() {\n        return \"Employee [name=\" + name + \", id=\" + id + \", salary=\" + salary + \"]\";\n    }\n}\n\nclass SalariedEmployee extends Employee{\n    private double monthlySalary;\n\n    public SalariedEmployee(String name, String id, double monthlySalary) {\n        super(name, id, monthlySalary);\n        this.monthlySalary = monthlySalary;\n    }\n\n    public SalariedEmployee() {\n    }\n\n    public double getMonthlySalary() {\n        return monthlySalary;\n    }\n\n    public void setMonthlySalary(double monthlySalary) {\n        this.monthlySalary = monthlySalary;\n    }\n\n    @Override\n    public String toString() {\n        return \"SalariedEmployee [name=\" + name + \", id=\" + id + \", monthlySalary=\" + monthlySalary + \"]\";\n    }\n}\n\nclass HourlyEmployee extends Employee{\n    private double hourlyWage;\n    private double workhours;\n\n    public HourlyEmployee(String name, String id, double hourlyWage, double workhours) {\n        super(name, id, hourlyWage * workhours);\n        this.hourlyWage = hourlyWage;\n        this.workhours = workhours;\n    }\n\n    public HourlyEmployee() {\n    }\n\n    public double getHourlyWage() {\n        return hourlyWage;\n    }\n\n    public void setHourlyWage(double hourlyWage) {\n        this.hourlyWage = hourlyWage;\n    }\n\n    public double getWorkhours() {\n        return workhours;\n    }\n\n    public void setWorkhours(double workhours) {\n        this.workhours = workhours;\n    }\n\n    @Override\n    public String toString() {\n        return \"HourlyEmployee [name=\" + name + \", id=\" + id + \", hourlyWage=\" + hourlyWage + \", workhours=\" + workhours + \"]\";\n    }\n}\n\nclass CommissionEmployee extends Employee{\n    private double commissionRate;\n    private double totalSales;\n\n    public CommissionEmployee(String name, String id, double commissionRate, double totalSales) {\n        super(name, id, commissionRate * totalSales);\n        this.commissionRate = commissionRate;\n        this.totalSales = totalSales;"
    },
    {
        "problem_id": "1441646396204761088",
        "user_id": "442",
        "code_reply": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner in=new Scanner(System.in);\n        Employee [] e=new Employee[3];\n        e[0]=new SalariedEmployee(in.next(),in.next(),in.nextDouble());\n        e[1]=new HourlyEmployee(in.next(),in.next(),in.nextDouble(),in.nextDouble());\n        e[2]=new CommissionEmployee(in.next(),in.next(),in.nextDouble(),in.nextDouble());\n        for(int i=0;i<e.length;i++)\n        {\n            System.out.println(e[i].getSalary());\n            System.out.println(e[i]);\n        }\n    }\n}\n\nclass Employee{\n    private String name;\n    private String id;\n    private double salary;\n\n    public Employee(String name, String id, double salary) {\n        this.name = name;\n        this.id = id;\n        this.salary = salary;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getId() {\n        return id;\n    }\n\n    public void setId(String id) {\n        this.id = id;\n    }\n\n    public double getSalary() {\n        return salary;\n    }\n\n    public void setSalary(double salary) {\n        this.salary = salary;\n    }\n\n    @Override\n    public String toString() {\n        return \"Employee [name=\" + name + \", id=\" + id + \"]\";\n    }\n}\n\nclass SalariedEmployee extends Employee{\n    private double monthlySalary;\n\n    public SalariedEmployee(String name, String id, double monthlySalary) {\n        super(name, id, monthlySalary);\n        this.monthlySalary = monthlySalary;\n    }\n\n    public SalariedEmployee() {\n    }\n\n    public double getMonthlySalary() {\n        return monthlySalary;\n    }\n\n    public void setMonthlySalary(double monthlySalary) {\n        this.monthlySalary = monthlySalary;\n    }\n\n    @Override\n    public String toString() {\n        return \"SalariedEmployee [name=\" + name + \", id=\" + id + \", monthlySalary=\" + monthlySalary + \"]\";\n    }\n}\n\nclass HourlyEmployee extends Employee{\n    private double hourlyWage;\n    private double workhours;\n\n    public HourlyEmployee(String name, String id, double hourlyWage, double workhours) {\n        super(name, id, hourlyWage * workhours);\n        this.hourlyWage = hourlyWage;\n        this.workhours = workhours;\n    }\n\n    public HourlyEmployee() {\n    }\n\n    public double getHourlyWage() {\n        return hourlyWage;\n    }\n\n    public void setHourlyWage(double hourlyWage) {\n        this.hourlyWage = hourlyWage;\n    }\n\n    public double getWorkhours() {\n        return workhours;\n    }\n\n    public void setWorkhours(double workhours) {\n        this.workhours = workhours;\n    }\n\n    @Override\n    public String toString() {\n        return \"HourlyEmployee [name=\" + name + \", id=\" + id + \", hourlyWage=\" + hourlyWage + \", workhours=\" + workhours + \"]\";\n    }\n}\n\nclass CommissionEmployee extends Employee{\n    private double commissionRate;\n    private double totalSales;\n\n    public CommissionEmployee(String name, String id, double commissionRate, double totalSales) {\n        super(name, id, commissionRate * totalSales);\n        this.commissionRate = commissionRate;\n        this.totalSales = totalSales;\n    }\n\n    public CommissionEmployee"
    }
]